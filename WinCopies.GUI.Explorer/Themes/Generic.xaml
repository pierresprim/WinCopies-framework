<ResourceDictionary x:Class="WinCopies.GUI.Explorer.Themes.Generic"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:WinCopies.GUI.Explorer"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:windows="clr-namespace:System.Windows;assembly=PresentationCore"
    xmlns:e="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:controls="clr-namespace:WinCopies.GUI.Controls;assembly=WinCopies.GUI.Controls"
    xmlns:util="clr-namespace:WinCopies.Util;assembly=WinCopies.Util"
                    xmlns:converters="clr-namespace:WinCopies.Util.DataConverters;assembly=WinCopies.Util"
                    xmlns:commandBehavior="clr-namespace:AttachedCommandBehavior;assembly=AttachedCommandBehavior"
                    xmlns:io="clr-namespace:WinCopies.IO;assembly=WinCopies.IO"
                    xmlns:guiWindows="clr-namespace:WinCopies.GUI.Windows;assembly=WinCopies.GUI"
                    xmlns:dialogs="clr-namespace:WinCopies.GUI.Windows.Dialogs"
                    xmlns:commands="clr-namespace:WinCopies.Util.Commands;assembly=WinCopies.Util"
                    xmlns:data="clr-namespace:WinCopies.GUI.Explorer.Data"
                    xmlns:dialogsData="clr-namespace:WinCopies.GUI.Windows.Dialogs.Data"
                    xmlns:pushBinding="clr-namespace:PushBindingExtension;assembly=PushBinding">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/wincopies.gui;component/Themes/Generic.xaml" />
        <ResourceDictionary Source="pack://application:,,,/wincopies.gui.controls;component/Themes/Generic.xaml" />
        <ResourceDictionary>

            <!--String resources-->

            <sys:String x:Key="Open" >Ouvrir</sys:String>
            <sys:String x:Key="OpenInNewTab" >Ouvrir dans un nouvel onglet</sys:String>
            <sys:String x:Key="OpenInNewWindow" >Ouvrir dans une nouvelle fenêtre</sys:String>
            <sys:String x:Key="OpenInNewInstanceWindow" >Ouvrir dans une nouvelle fenêtre d'une nouvelle instance</sys:String>
            <sys:String x:Key="Copy" >Copier</sys:String>
            <sys:String x:Key="Cut" >Couper</sys:String>
            <sys:String x:Key="Paste" >Coller</sys:String>
            <sys:String x:Key="CreateShortcut" >Créer un raccourci</sys:String>
            <sys:String x:Key="PasteShortcut" >Coller le raccourci</sys:String>
            <sys:String x:Key="Rename" >Renommer</sys:String>
            <sys:String x:Key="Delete" >Supprimer</sys:String>
            <sys:String x:Key="Properties" >Propriétés</sys:String>
            <sys:String x:Key="CommonProperties" >Propriétés communes :</sys:String>
            <sys:String x:Key="CreationTime" >Date de création :</sys:String>
            <sys:String x:Key="LastAccessTime" >Dernier accès le :</sys:String>
            <sys:String x:Key="LastWriteTime" >Dernière modification :</sys:String>
            <sys:String x:Key="Size" >Taille :</sys:String>
            <sys:String x:Key="SpecificProperties">Propriétés spécifiques :</sys:String>
            <sys:String x:Key="EditProperty" >Éditer la propriété...</sys:String>
            <sys:String x:Key="Common" >Général</sys:String>
            <sys:String x:Key="FileType" >Type du fichier :</sys:String>
            <sys:String x:Key="OpenWith" >S'ouvre avec l'application :</sys:String>
            <sys:String x:Key="Define" >Modifier...</sys:String>
            <sys:String x:Key="Path" >Emplacement :</sys:String>
            <sys:String x:Key="SizeOnDisk" >Taille sur disque :</sys:String>
            <sys:String x:Key="Details" >Détails</sys:String>
            <sys:String x:Key="Property" >Propriété :</sys:String>
            <sys:String x:Key="Value" >Valeur :</sys:String>
            <sys:String x:Key="DeletePersonalProperties" >Supprimer les propriétés et informations personnelles</sys:String>
            <sys:String x:Key="OpenFolder" >Ouvrir le dossier</sys:String>
            <sys:String x:Key="OpenFile" >Ouvrir un fichier</sys:String>
            <sys:String x:Key="OpenFiles" >Ouvrir des fichiers</sys:String>
            <sys:String x:Key="Save" >Enregistrer</sys:String>
            <sys:String x:Key="WinCopiesProcessesManagerPath" >WinCopiesProcessesManager.exe</sys:String>

            <!--Data converters-->

            <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <data:FileSystemInfoAttributesToVisibilityConverter x:Key="FileSystemInfoAttributesToVisibilityConverter" />
            <data:FileSystemInfoAttributesToOpacityConverter x:Key="FileSystemInfoAttributesToOpacityConverter" />
            <data:ViewStyleConverter x:Key="ViewStyleConverter" />

        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <dialogs:ShellObjectInfoConverter x:Key="ShellObjectInfoConverter" />
    <io:ShellPropertyConverter x:Key="ShellPropertyConverter" />

    <!--ExplorerControl ListView item container styles-->

    <Style x:Key="ExplorerControlListViewItemStyle" TargetType="{x:Type local:ListViewItem}" >
        <Setter Property="IsSelected" Value="{Binding IsSelected}" />

        <Setter Property="IsCheckBoxEnabled" >
            <Setter.Value >
                <MultiBinding Converter="{data:ShowItemsCheckBoxConverter}" >
                    <Binding Path="ParentExplorerControl.SelectionMode" RelativeSource="{RelativeSource Mode=Self}" />
                    <Binding Path="ParentExplorerControl.ShowItemsCheckBox" RelativeSource="{RelativeSource Mode=Self}" />
                </MultiBinding>
            </Setter.Value>
        </Setter>

        <!--<Setter Property="pushBinding:PushBindingManager.StylePushBindings" >
            <Setter.Value>
                <pushBinding:PushBindingCollection>

                    <pushBinding:PushBinding TargetProperty="IsCheckBoxEnabled" Path="IsCheckBoxEnabled" />
                </pushBinding:PushBindingCollection>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Converter={StaticResource FileSystemInfoConverter}, Mode=OneTime}" >-->

        <Setter Property="Visibility" >
            <Setter.Value >
                <MultiBinding Converter="{StaticResource FileSystemInfoAttributesToVisibilityConverter}" >
                    <Binding />
                    <Binding Path="FileSystemInfoProperties.Attributes" />
                    <Binding Path="ParentExplorerControl.ShowHiddenItems" RelativeSource="{RelativeSource Mode=Self}" />
                    <Binding Path="ParentExplorerControl.ShowSystemItems" RelativeSource="{RelativeSource Mode=Self}" />
                </MultiBinding>
            </Setter.Value>
        </Setter>

        <Setter Property="ContextMenu" Value="{Binding ParentExplorerControl.ItemContextMenu, RelativeSource={RelativeSource Mode=Self}}" />

        <EventSetter Event="ContextMenuOpening" Handler="ListViewItem_ContextMenuOpening" />
        <!--</DataTrigger>
                                                    </Style.Triggers>-->
    </Style>

    <DataTemplate x:Key="ExplorerControlSizeOneListViewItemContentTemplate" x:Shared="false" >
        <StackPanel Orientation="Horizontal" Height="16" Width="300" >
            <CheckBox Visibility="{Binding IsCheckBoxEnabled, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewItem}}}" IsChecked="{Binding IsSelected}" />
            <Image Source="{Binding SmallBitmapSource}" Height="16" Width="16" >
                <Image.Opacity>
                    <MultiBinding Converter="{StaticResource FileSystemInfoAttributesToOpacityConverter}" >
                        <Binding />
                        <Binding Path="FileSystemInfoProperties.Attributes" />
                        <Binding Path="ShowHiddenItems" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExplorerControl}}" />
                        <Binding Path="ShowSystemItems" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExplorerControl}}" />
                    </MultiBinding>
                </Image.Opacity>
            </Image>
            <!--, Converter={local:ImageSourceConverter}}-->
            <TextBlock Grid.Row="2" Text="{Binding Name}" ToolTip="{Binding Name}" TextWrapping="Wrap" TextTrimming="WordEllipsis" />
        </StackPanel>
    </DataTemplate>

    <Style x:Key="ExplorerControlSizeOneListViewItemStyle" TargetType="{x:Type local:ListViewItem}" BasedOn="{StaticResource ExplorerControlListViewItemStyle}">
        <!--<Setter Property="Height" Value="30" ></Setter>-->
        <Setter Property="ContentTemplate" Value="{StaticResource ExplorerControlSizeOneListViewItemContentTemplate}" />
        <!--<Setter Property="Orientation" Value="Horizontal" ></Setter>-->
    </Style>

    <DataTemplate x:Key="ExplorerControlSizeTwoListViewItemContentTemplate" x:Shared="false" >
        <Grid Width="75" >
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition />
                <RowDefinition MaxHeight="32" />
            </Grid.RowDefinitions>
            <CheckBox Visibility="{Binding IsCheckBoxEnabled, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewItem}}}" IsChecked="{Binding IsSelected}" />
            <Image Grid.Row="1" Source="{Binding MediumBitmapSource}" Height="64" VerticalAlignment="Bottom" Width="64" >
                <Image.Opacity>
                    <MultiBinding Converter="{StaticResource FileSystemInfoAttributesToOpacityConverter}" >
                        <Binding />
                        <Binding Path="FileSystemInfoProperties.Attributes" />
                        <Binding Path="ShowHiddenItems" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExplorerControl}}" />
                        <Binding Path="ShowSystemItems" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExplorerControl}}" />
                    </MultiBinding>
                </Image.Opacity>
            </Image>
            <TextBlock Grid.Row="2" MaxHeight="32" Text="{Binding Name}" ToolTip="{Binding ShellObject.Name}" TextWrapping="Wrap" TextTrimming="WordEllipsis" TextAlignment="Center" VerticalAlignment="Top" />
        </Grid>
    </DataTemplate>

    <Style x:Key="ExplorerControlSizeTwoListViewItemStyle" TargetType="{x:Type local:ListViewItem}" BasedOn="{StaticResource ExplorerControlListViewItemStyle}">

        <!--<Setter Property="Height" Value="50" ></Setter>
                
                <Setter Property="Width" Value="75" ></Setter>-->

        <Setter Property="ContentTemplate" Value="{StaticResource ExplorerControlSizeTwoListViewItemContentTemplate}" />

        <Setter Property="VerticalContentAlignment" Value="Top" />

        <!--<Setter Property="Orientation" Value="Vertical" ></Setter>-->

    </Style>

    <DataTemplate x:Key="ExplorerControlSizeThreeListViewItemContentTemplate" x:Shared="false" >
        <Grid Width="100">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition />
                <RowDefinition MaxHeight="32" />
            </Grid.RowDefinitions>
            <CheckBox Visibility="{Binding IsCheckBoxEnabled, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewItem}}}" IsChecked="{Binding IsSelected}" />
            <Image Grid.Row="1" Source="{Binding LargeBitmapSource}" Height="96" VerticalAlignment="Bottom" Width="96" >
                <Image.Opacity>
                    <MultiBinding Converter="{StaticResource FileSystemInfoAttributesToOpacityConverter}" >
                        <Binding />
                        <Binding Path="FileSystemInfoProperties.Attributes" />
                        <Binding Path="ShowHiddenItems" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExplorerControl}}" />
                        <Binding Path="ShowSystemItems" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExplorerControl}}" />
                    </MultiBinding>
                </Image.Opacity>
            </Image>
            <!--, Converter={local:ImageSourceConverter}}-->
            <TextBlock Grid.Row="2" MaxHeight="32" Text="{Binding Name}" ToolTip="{Binding ShellObject.Name}" TextWrapping="Wrap" TextTrimming="WordEllipsis" TextAlignment="Center" />
        </Grid>
    </DataTemplate>

    <Style x:Key="ExplorerControlSizeThreeListViewItemStyle" TargetType="{x:Type local:ListViewItem}" BasedOn="{StaticResource ExplorerControlListViewItemStyle}">

        <Setter Property="ContentTemplate" Value="{StaticResource ExplorerControlSizeThreeListViewItemContentTemplate}" />

        <Setter Property="VerticalContentAlignment" Value="Top" />

        <!--<Setter Property="Height" Value="30" ></Setter>-->

        <!--<Setter Property="Orientation" Value="Horizontal" />-->

    </Style>

    <DataTemplate x:Key="ExplorerControlSizeFourListViewItemContentTemplate" x:Shared="false">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition />
                <RowDefinition MaxHeight="32" />
            </Grid.RowDefinitions>
            <CheckBox Visibility="{Binding IsCheckBoxEnabled, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewItem}}}" IsChecked="{Binding IsSelected}" />
            <Image Grid.Row="1" Source="{Binding ExtraLargeBitmapSource}" Height="256" Width="256" >
                <Image.Opacity>
                    <MultiBinding Converter="{StaticResource FileSystemInfoAttributesToOpacityConverter}" >
                        <Binding />
                        <Binding Path="FileSystemInfoProperties.Attributes" />
                        <Binding Path="ShowHiddenItems" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExplorerControl}}" />
                        <Binding Path="ShowSystemItems" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExplorerControl}}" />
                    </MultiBinding>
                </Image.Opacity>
            </Image>
            <!--, Converter={local:ImageSourceConverter}}-->
            <TextBlock Grid.Row="2" MaxHeight="32" Text="{Binding Name}" ToolTip="{Binding ShellObject.Name}" TextWrapping="Wrap" TextTrimming="WordEllipsis" TextAlignment="Center" />
        </Grid>
    </DataTemplate>

    <Style x:Key="ExplorerControlSizeFourListViewItemStyle" TargetType="{x:Type local:ListViewItem}" BasedOn="{StaticResource ExplorerControlListViewItemStyle}">

        <!--<Setter Property="Height" Value="30" ></Setter>-->

        <Setter Property="ContentTemplate" Value="{StaticResource ExplorerControlSizeFourListViewItemContentTemplate}" />

        <!--<Setter Property="VerticalContentAlignment" Value="Bottom" />-->

        <!--<Setter Property="Orientation" Value="Horizontal" ></Setter>-->

    </Style>

    <DataTemplate x:Key="ExplorerControlListListViewItemContentTemplate" x:Shared="false">
        <StackPanel Orientation="Horizontal" >
            <CheckBox Visibility="{Binding IsCheckBoxEnabled, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewItem}}}" IsChecked="{Binding IsSelected}" />
            <Image Source="{Binding SmallBitmapSource}" Height="16" Width="16" >
                <Image.Opacity>
                    <MultiBinding Converter="{StaticResource FileSystemInfoAttributesToOpacityConverter}" >
                        <Binding />
                        <Binding Path="FileSystemInfoProperties.Attributes" />
                        <Binding Path="ShowHiddenItems" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExplorerControl}}" />
                        <Binding Path="ShowSystemItems" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExplorerControl}}" />
                    </MultiBinding>
                </Image.Opacity>
            </Image>
            <!--, Converter={local:ImageSourceConverter}}-->
            <TextBlock Text="{Binding Name}" />
        </StackPanel>
    </DataTemplate>

    <Style x:Key="ExplorerControlListListViewItemStyle" TargetType="{x:Type local:ListViewItem}" BasedOn="{StaticResource ExplorerControlListViewItemStyle}">

        <!--<Setter Property="Height" Value="30" ></Setter>-->

        <Setter Property="ContentTemplate" Value="{StaticResource ExplorerControlListListViewItemContentTemplate}" />

        <!--<Setter Property="VerticalContentAlignment" Value="Bottom" />-->

        <!--<Setter Property="Orientation" Value="Horizontal" ></Setter>-->

    </Style>

    <DataTemplate x:Key="ExplorerControlTilesListViewItemContentTemplate" x:Shared="false">
        <StackPanel Orientation="Horizontal" >
            <CheckBox Visibility="{Binding IsCheckBoxEnabled, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ListViewItem}}}" IsChecked="{Binding IsSelected}" VerticalAlignment="Center" />
            <Image Source="{Binding SmallBitmapSource}" Height="48" Width="48" >
                <Image.Opacity>
                    <MultiBinding Converter="{StaticResource FileSystemInfoAttributesToOpacityConverter}" >
                        <Binding />
                        <Binding Path="FileSystemInfoProperties.Attributes" />
                        <Binding Path="ShowHiddenItems" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExplorerControl}}" />
                        <Binding Path="ShowSystemItems" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExplorerControl}}" />
                    </MultiBinding>
                </Image.Opacity>
            </Image>
            <!--, Converter={local:ImageSourceConverter}}-->
            <StackPanel Margin="10,0,0,0">
                <TextBlock Text="{Binding Name}" />
                <controls:Label Padding="0" Content="{Binding ShellObject.Properties.System.ItemTypeText.ValueAsObject}" Foreground="Gray" />
                <controls:Label Padding="0" Content="{Binding ShellObject.Properties.System.Size.ValueAsObject}" Foreground="Gray" />
            </StackPanel>
        </StackPanel>
    </DataTemplate>

    <Style x:Key="ExplorerControlTilesListViewItemStyle" TargetType="{x:Type local:ListViewItem}" BasedOn="{StaticResource ExplorerControlListViewItemStyle}">

        <!--<Setter Property="Height" Value="30" ></Setter>-->

        <Setter Property="ContentTemplate" Value="{StaticResource ExplorerControlTilesListViewItemContentTemplate}" />
        <Setter Property="Height" Value="64" />
        <Setter Property="Width" Value="300" />

        <!--<Setter Property="VerticalContentAlignment" Value="Bottom" />-->

        <!--<Setter Property="Orientation" Value="Horizontal" ></Setter>-->
    </Style>

    <!--End region ExplorerControl ListView item container styles-->

    <DataGrid  x:Key="FilePropertyEditorDialogContent" x:Shared="false" ItemsSource="{Binding FileProperties}" AutoGenerateColumns="False">
        <!--<DataGrid.Style>
                                        <Style TargetType="{x:Type DataGrid}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type DataGrid}">
                                                        <DataGridRowsPresenter >

                                                        </DataGridRowsPresenter>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            -->
        <!--<Setter Property="ItemTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>

                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>-->
        <!--
                                        </Style>
                                    </DataGrid.Style>-->

        <DataGrid.Columns>
            <DataGridTemplateColumn >
                <DataGridTemplateColumn.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}" >
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridCell}" >
                                    <TextBox Text="{Binding Mode=OneWay}" ></TextBox>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGridTemplateColumn.CellStyle>
            </DataGridTemplateColumn>
        </DataGrid.Columns>

        <!--<DataGrid.ItemContainerStyle>
                        <Style TargetType="{x:Type DataGridRow}" >
                            <Setter Property="Visibility" Value="{Binding Converter={dialogs:ShellPropertyConverter}, ConverterParameter=Visibility}" />
                        </Style>
                    </DataGrid.ItemContainerStyle>-->
    </DataGrid>

    <data:FileSystemInfoConverter x:Key="FileSystemInfoConverter" />

    <Style TargetType="{x:Type local:ExplorerControl}" >

        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ExplorerControl}">

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100" ></ColumnDefinition>
                            <ColumnDefinition ></ColumnDefinition>
                            <ColumnDefinition Width="auto" ></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" ></RowDefinition>
                            <RowDefinition ></RowDefinition>
                        </Grid.RowDefinitions>

                        <Grid Grid.ColumnSpan="3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>

                            <StackPanel Orientation="Horizontal">
                                <Button Click="PreviousButton_Click" IsEnabled="{Binding CanMoveToPreviousPath, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                    <Image Source="{Binding PreviousPathIcon, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                </Button>
                                <Button Click="ForwardButton_Click" IsEnabled="{Binding CanMoveToNextPath, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                    <Image Source="{Binding NextPathIcon, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                </Button>
                                <controls:PopupMenuButton Header="▼" ItemsSource="{Binding History, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                    <controls:PopupMenuButton.ItemContainerStyle>
                                        <Style TargetType="{x:Type MenuItem}">
                                            <Setter Property="Header" Value="{Binding Path}" />
                                            <Setter Property="IsCheckable" Value="True" />
                                            <Setter Property="IsChecked">
                                                <Setter.Value>
                                                    <MultiBinding Converter="{data:HistorySelectedItemConverter}" Mode="OneWay" >
                                                        <Binding />
                                                        <Binding Path="History" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExplorerControl}}" />
                                                        <Binding Path="HistorySelectedIndex" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExplorerControl}}" />
                                                    </MultiBinding>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </controls:PopupMenuButton.ItemContainerStyle>
                                </controls:PopupMenuButton>
                                <Button IsEnabled="{Binding CanMoveToParentPath, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                    <Image Source="{Binding ParentPathIcon, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                </Button>
                            </StackPanel>

                            <TextBox x:Name="PART_TextBox" Grid.Column="1" Text="{Binding Text, RelativeSource={RelativeSource Mode=TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center"
                                         KeyDown="TextBox_KeyDown" LostFocus="TextBox_LostFocus" TextChanged="PART_TextBox_TextChanged" />

                            <Button Grid.Column="2" Click="Button_Click">
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{Binding FolderGoIcon, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsLoading, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="true">
                                                        <!--todo: doesn't work-->
                                                        <Setter Property="Source" Value="{Binding FolderCancelLoadingIcon, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                    <Label>Go</Label>
                                </StackPanel>
                            </Button>
                        </Grid>

                        <controls:TreeView x:Name="PART_TreeView" Grid.Row="1" ItemsSource="{Binding TreeViewItems, RelativeSource={RelativeSource Mode=TemplatedParent}}" Command="{Binding Command, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExplorerControl}}}"        CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource Mode=Self}}" >
                            <controls:TreeView.ItemTemplate>
                                <HierarchicalDataTemplate ItemsSource="{Binding Items}" >
                                    <!--<Button Click="Button_Click_1">
                                                    <Button.Template>
                                                        <ControlTemplate>-->
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{Binding ShellObject.Thumbnail.SmallBitmapSource}" >
                                            <Image.Opacity>
                                                <MultiBinding Converter="{StaticResource FileSystemInfoAttributesToOpacityConverter}" >
                                                    <Binding />
                                                    <Binding Path="FileSystemInfoProperties.Attributes" />
                                                    <Binding Path="ShowHiddenItems" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExplorerControl}}" />
                                                    <Binding Path="ShowSystemItems" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExplorerControl}}" />
                                                </MultiBinding>
                                            </Image.Opacity>
                                        </Image>
                                        <controls:Label RecognizesAccessKey="False" Content="{Binding ShellObject.Properties.System.ItemNameDisplay.Value}" Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}}" />
                                    </StackPanel>
                                    <!--</ControlTemplate>
                                                    </Button.Template>
                                                </Button>-->
                                </HierarchicalDataTemplate>
                            </controls:TreeView.ItemTemplate>
                            <controls:TreeView.ItemContainerStyle>
                                <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                                    <Setter Property="commandBehavior:CommandBehavior.Event" Value="Loaded" />
                                    <!--todo:-->
                                    <Setter Property="commandBehavior:CommandBehavior.Command" Value="{x:Static local:Commands.TrucMuche}" />
                                    <Setter Property="commandBehavior:CommandBehavior.CommandParameter" Value="{Binding}" />

                                    <!--<Setter Property="IsSelected" Value="{Binding IsSelected}" />-->

                                    <!--<Style.Triggers>
                                                        <DataTrigger Binding="{Binding Converter={StaticResource FileSystemInfoConverter}, Mode=OneTime}" >-->
                                    <Setter Property="Visibility" >
                                        <Setter.Value >
                                            <MultiBinding Converter="{StaticResource FileSystemInfoAttributesToVisibilityConverter}" >
                                                <Binding />
                                                <Binding Path="FileSystemInfoProperties.Attributes" />
                                                <Binding Path="ShowHiddenItems" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExplorerControl}}" />
                                                <Binding Path="ShowSystemItems" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExplorerControl}}" />
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>

                                    <!--<EventSetter Event="MouseUp" Handler="TreeViewItem_Selected" />-->
                                </Style>
                            </controls:TreeView.ItemContainerStyle>
                            <!--<controls:TreeView.Style>
                                <Style TargetType="{x:Type controls:TreeView}" BasedOn="{StaticResource {x:Type controls:TreeView}}">
                                    <Setter Property="pushBinding:PushBindingManager.StylePushBindings">
                                        <Setter.Value>
                                            <pushBinding:PushBindingCollection >
                                                <pushBinding:PushBinding TargetProperty="SelectedItem" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExplorerControl}}" Path="TreeViewSelectedItem" />
                                            </pushBinding:PushBindingCollection>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </controls:TreeView.Style>-->
                        </controls:TreeView>

                        <GridSplitter Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="5" ></GridSplitter>

                        <local:ListView x:Name="PART_ListView" Grid.Column="1" Grid.Row="1" Margin="5,0,5,0" ItemsSource="{Binding Path.Items, RelativeSource={RelativeSource Mode=TemplatedParent}}" SelectedItem="{Binding Path.SelectedItem, RelativeSource={RelativeSource Mode=TemplatedParent}}" MouseDoubleClick="ListView_MouseDoubleClick" SelectionChanged="ListView_SelectionChanged" SelectionMode="{Binding SelectionMode, RelativeSource={RelativeSource Mode=TemplatedParent}}" Focusable="True" CommandParameter="{Binding SelectedItems, RelativeSource={RelativeSource Self}}" Command="{Binding Command, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExplorerControl}}}"        >
                            <!--<local:ListView.Resources>
                                <FrameworkElement x:Key="FrameworkElement" DataContext="{Binding}" />
                            </local:ListView.Resources>-->
                            <local:ListView.Style>
                                <Style TargetType="{x:Type ListView}" >

                                    <Setter Property="ItemsPanel">
                                        <Setter.Value>
                                            <ItemsPanelTemplate>
                                                <WrapPanel Orientation="{Binding ViewStyle, RelativeSource={RelativeSource AncestorType={x:Type local:ExplorerControl}}, Converter={StaticResource ViewStyleConverter}, ConverterParameter=WrapPanelOrientation}" />
                                            </ItemsPanelTemplate>
                                        </Setter.Value>
                                    </Setter>

                                    <!--<Setter Property="ItemTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <local:ListViewItem />
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>-->

                                    <!--<Setter Property="ItemContainerStyle" Value="{StaticResource ExplorerControlListViewItemStyle}" />-->

                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ViewStyle, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource ViewStyleConverter}, ConverterParameter=ScrollBarsVisibility}" Value="SizeOneToFourOrTiles" >
                                            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding ViewStyle, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource ViewStyleConverter}, ConverterParameter=ScrollBarsVisibility}" Value="ListItems" >
                                            <!--<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" ></Setter>-->
                                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding ViewStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Static local:ViewStyles.Details}" >
                                            <Setter Property="ItemsPanel" >
                                                <Setter.Value>
                                                    <ItemsPanelTemplate>
                                                        <StackPanel />
                                                    </ItemsPanelTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding ViewStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Static local:ViewStyles.SizeOne}" >
                                            <Setter Property="ItemContainerStyle" Value="{StaticResource ExplorerControlSizeOneListViewItemStyle}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ViewStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Static local:ViewStyles.SizeTwo}" >
                                            <Setter Property="ItemContainerStyle" Value="{StaticResource ExplorerControlSizeTwoListViewItemStyle}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ViewStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Static local:ViewStyles.SizeThree}" >
                                            <Setter Property="ItemContainerStyle" Value="{StaticResource ExplorerControlSizeThreeListViewItemStyle}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ViewStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Static local:ViewStyles.SizeFour}" >
                                            <Setter Property="ItemContainerStyle" Value="{StaticResource ExplorerControlSizeFourListViewItemStyle}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ViewStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Static local:ViewStyles.List}" >
                                            <Setter Property="ItemContainerStyle" Value="{StaticResource ExplorerControlListListViewItemStyle}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ViewStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Static local:ViewStyles.Tiles}" >
                                            <Setter Property="ItemContainerStyle" Value="{StaticResource ExplorerControlTilesListViewItemStyle}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ViewStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Static local:ViewStyles.Details}" >
                                            <Setter Property="View" >
                                                <Setter.Value>
                                                    <GridView x:Name="Bidule" >
                                                        <GridViewColumn Header="FileName" DisplayMemberBinding="{Binding ShellObject.Name}" />
                                                    </GridView>
                                                </Setter.Value>
                                            </Setter>
                                            <!--<Setter Property="ItemContainerStyle" Value="{StaticResource ExplorerControlDetailsListViewItemStyle}" />-->
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </local:ListView.Style>
                            <!--<ListView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel />
                                    </ItemsPanelTemplate>
                                </ListView.ItemsPanel>-->
                            <!--<ListView.ItemTemplate>
                                    <DataTemplate>
                                        
                                    </DataTemplate>
                                </ListView.ItemTemplate>-->
                        </local:ListView>
                        <!--<StaticResource ResourceKey="bidule" />-->
                        <!--SelectedItems="{Binding Mode=OneWay}"-->

                        <GridSplitter Grid.Column="1" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Stretch" Width="5" />

                        <local:FilePropertyGrid x:Name="PART_FilePropertyGrid" Grid.Column="2" Grid.Row="1" >
                            <local:FilePropertyGrid.Style>
                                <Style TargetType="{x:Type local:FilePropertyGrid}">
                                    <Setter Property="DataContext" Value="{Binding Path, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                    <Style.Triggers>
                                        <!--We have to bind to the SelectedItem from the Path property of the templated parent ExplorerControl because of a StackOverflow exception otherwise (the selected item of the data context selected item is always so the DataTrigger will be raised with an infinite loop).-->
                                        <DataTrigger Binding="{Binding Path.SelectedItem, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={converters:IsNullConverter}}" Value="false">
                                            <Setter Property="DataContext" Value="{Binding Path.SelectedItem, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </local:FilePropertyGrid.Style>
                        </local:FilePropertyGrid>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemContextMenu">
            <Setter.Value>
                <ContextMenu ItemContainerStyle="{StaticResource MenuItemStyle}">
                </ContextMenu>
            </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="{x:Type local:FilePropertyGrid}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="100" />
                            <RowDefinition Height="auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Label Content="{Binding ShellObject, Converter={data:FileNameConverter}}" />
                        <Label Grid.Row="1" Content="{Binding ShellObject.Properties.System.ItemTypeText.Value}" />
                        <Label Grid.Row="2" >
                            <Label.Content>
                                <MultiBinding Converter="{data:FileTypeConverter}">
                                    <Binding Path="ShellObject.Properties.System.ContentType.Value" />
                                    <Binding Path="ShellObject.Properties.System.MIMEType.Value" />
                                </MultiBinding>
                            </Label.Content>
                        </Label>
                        <Image Grid.Row="3" HorizontalAlignment="Left" Source="{Binding ShellObject.Thumbnail.BitmapSource}" />
                        <Expander Grid.Row="4" Header="{StaticResource CommonProperties}" IsExpanded="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Label Content="{StaticResource CreationTime}" />
                                <Label Grid.Column="1" Content="{Binding ShellObject.Properties.System.DateCreated.Value}" />
                                <Label Grid.Row="1" Content="{StaticResource LastAccessTime}" />
                                <Label Grid.Column="1" Grid.Row="1" Content="{Binding ShellObject.Properties.System.DateAccessed.Value}" />
                                <Label Grid.Row="2" Content="{StaticResource LastWriteTime}" />
                                <Label Grid.Column="1" Grid.Row="2" Content="{Binding ShellObject.Properties.System.DateModified.Value}" />
                                <Label Grid.Row="3" Content="{StaticResource Size}" />
                                <Label Grid.Column="1" Grid.Row="3" Content="{Binding ShellObject.Properties.System.Size.Value}" />
                            </Grid>
                        </Expander>
                        <Expander Grid.Row="5" Header="{StaticResource SpecificProperties}" IsExpanded="True" >
                            <DataGrid ItemsSource="{Binding FileProperties, RelativeSource={RelativeSource Mode=TemplatedParent}}" AutoGenerateColumns="False">
                                <!--<DataGrid.Style>
                                        <Style TargetType="{x:Type DataGrid}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type DataGrid}">
                                                        <DataGridRowsPresenter >

                                                        </DataGridRowsPresenter>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            -->
                                <!--<Setter Property="ItemTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>

                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>-->
                                <!--
                                        </Style>
                                    </DataGrid.Style>-->

                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Description.DisplayName}" IsReadOnly="True" />
                                    <DataGridTemplateColumn >
                                        <DataGridTemplateColumn.CellStyle>
                                            <Style TargetType="{x:Type DataGridCell}" >
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type DataGridCell}" >
                                                            <TextBox x:Name="textbox" Text="{Binding ValueAsObject, Mode=OneTime}" IsReadOnly="True" IsReadOnlyCaretVisible="True" />

                                                            <ControlTemplate.Triggers>

                                                                <DataTrigger Binding="{Binding Converter={StaticResource ShellPropertyConverter}, ConverterParameter=IsReadOnly}" Value="false" >
                                                                    <Setter TargetName="textbox" Property="IsReadOnly" Value="false" />
                                                                    <Setter TargetName="textbox" Property="Text" Value="{Binding ValueAsObject}" />
                                                                </DataTrigger>

                                                            </ControlTemplate.Triggers>

                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>

                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Converter={StaticResource ShellPropertyConverter}, ConverterParameter=IsEnum}" Value="true" >
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                                    <ComboBox ItemsSource="{Binding Converter={StaticResource ShellPropertyConverter}, ConverterParameter=EnumValues}" SelectedItem="{Binding ValueAsObject, Mode=OneTime}" />
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Converter={StaticResource ShellPropertyConverter}, ConverterParameter=IsArray}" Value="true" >
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type DataGridCell}" >
                                                                    <Button Command="{x:Static local:Commands.EditProperty}" CommandParameter="{Binding}">...</Button>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGridTemplateColumn.CellStyle>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>

                                <DataGrid.ItemContainerStyle>
                                    <Style TargetType="{x:Type DataGridRow}" >
                                        <Setter Property="Visibility" Value="{Binding Converter={StaticResource ShellPropertyConverter}, ConverterParameter=Visibility}" />
                                    </Style>
                                </DataGrid.ItemContainerStyle>
                            </DataGrid>
                        </Expander>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Shared="false" TargetType="{x:Type dialogs:FilePropertiesDialog}" BasedOn="{StaticResource {x:Type Window}}" >
        <Setter Property="Content" >
            <Setter.Value>

                <TabControl>
                    <TabItem Header="{StaticResource Common}" >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>
                            <Image Source="{Binding ShellObject.Thumbnail.BitmapSource}" Height="64" Width="64" />
                            <TextBox Grid.Column="1" Text="{Binding Path, Converter={StaticResource ShellObjectInfoConverter}, ConverterParameter=FileName, Mode=OneWay}" />
                            <Label Grid.Row="1" Content="{StaticResource FileType}" />
                            <TextBox Grid.Column="1" Grid.Row="1" Style="{StaticResource ReadOnlyTextBoxStyle}" Text="{Binding Converter={StaticResource ShellObjectInfoConverter}, ConverterParameter=FileType, Mode=OneWay}" />
                            <Label Grid.Row="2" Content="{StaticResource OpenWith}" />
                            <DockPanel Grid.Column="1" Grid.Row="2">
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{Binding OpenWithSoftware.Thumbnail.BitmapSource, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:FilePropertiesDialog}}, Mode=OneWay}" Height="64" Width="64" />
                                    <ComboBox IsEditable="True" SelectedItem="{Binding OpenWithSoftware.Path, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:FilePropertiesDialog}}, Mode=OneWay}" ItemsSource="{Binding OpenWithSoftwares, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:FilePropertiesDialog}}, Mode=OneWay}" />
                                </StackPanel>
                                <StackPanel DockPanel.Dock="Right" >
                                    <Button Content="{StaticResource Define}" Command="{x:Static dialogs:FilePropertiesDialog.DefineOpenWithSoftware}" />
                                    <Button Content="Search in Windows Store" />
                                </StackPanel>
                            </DockPanel>
                            <Label Grid.Row="3" Content="{StaticResource Path}" />
                            <DockPanel Grid.Column="1" Grid.Row="3" >
                                <StackPanel Orientation="Horizontal" >
                                    <Image Source="{Binding Path, Converter={StaticResource ShellObjectInfoConverter}, ConverterParameter=PathBitmapSource, Mode=OneWay}" Height="64" Width="64" />
                                    <TextBox Style="{StaticResource ReadOnlyTextBoxStyle}" Text="{Binding Path, Converter={StaticResource ShellObjectInfoConverter}, ConverterParameter=Path, Mode=OneWay}" />
                                </StackPanel>
                                <Button DockPanel.Dock="Right" Content="Move..." ></Button>
                            </DockPanel>
                            <Label Grid.Row="4" Content="{StaticResource Size}" />
                            <TextBox Grid.Column="1" Grid.Row="4" Style="{StaticResource ReadOnlyTextBoxStyle}" Text="{Binding Converter={StaticResource ShellObjectInfoConverter}, ConverterParameter=Size, Mode=OneWay}" />
                            <Label Grid.Row="5" Content="{StaticResource SizeOnDisk}" />
                            <TextBox Grid.Column="1" Grid.Row="5" Style="{StaticResource ReadOnlyTextBoxStyle}" Text="{Binding Converter={StaticResource ShellObjectInfoConverter}, ConverterParameter=SizeOnDisk, Mode=OneWay}" />
                            <Label Grid.Row="6" Content="{StaticResource CreationTime}" />
                            <TextBox Grid.Column="1" Grid.Row="6" Style="{StaticResource ReadOnlyTextBoxStyle}" Text="{Binding Converter={StaticResource ShellObjectInfoConverter}, ConverterParameter=CreationTime, Mode=OneWay}" />
                            <Label Grid.Row="7" Content="{StaticResource LastWriteTime}" />
                            <TextBox Grid.Column="1" Grid.Row="7" Style="{StaticResource ReadOnlyTextBoxStyle}" Text="{Binding Converter={StaticResource ShellObjectInfoConverter}, ConverterParameter=LastWriteTime, Mode=OneWay}" />
                            <Label Grid.Row="8" Content="{StaticResource LastAccessTime}" />
                            <TextBox Grid.Column="1" Grid.Row="8" Style="{StaticResource ReadOnlyTextBoxStyle}" Text="{Binding Converter={StaticResource ShellObjectInfoConverter}, ConverterParameter=LastAccessTime, Mode=OneWay}" />
                        </Grid>
                    </TabItem>
                    <TabItem Header="{StaticResource Details}" >
                        <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding Properties, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:FilePropertiesDialog}}, Mode=OneWay}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="{StaticResource Property}" Binding="{Binding Value.Description.DisplayName}" IsReadOnly="True" />
                                <DataGridTemplateColumn Header="{StaticResource Value}" >
                                    <DataGridTemplateColumn.CellStyle>
                                        <Style TargetType="{x:Type DataGridCell}">
                                            <Setter Property="Template" >
                                                <Setter.Value >
                                                    <ControlTemplate TargetType="{x:Type DataGridCell}" >
                                                        <Control x:Name="textboxPresenter" >
                                                            <Control.Template>
                                                                <ControlTemplate>
                                                                    <TextBox Text="{Binding Value.ValueAsObject, Mode=OneWay}" Style="{StaticResource ReadOnlyTextBoxStyle}" />
                                                                </ControlTemplate>
                                                            </Control.Template>
                                                        </Control>
                                                        <!--<TextBox x:Name="textbox" Text="{Binding Value.ValueAsObject, Mode=OneWay}" IsReadOnly="True" IsReadOnlyCaretVisible="True" Style="{StaticResource ReadOnlyTextBoxStyle}" />-->
                                                        <ControlTemplate.Triggers>
                                                            <!--<DataTrigger Binding="{Binding Value, Converter={StaticResource ShellPropertyConverter}, ConverterParameter=IsReadOnly}" Value="true">
                                                                <Setter TargetName="textboxPresenter" Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate>
                                                                            <TextBox Text="{Binding Value.ValueAsObject, Mode=OneWay}" Style="{StaticResource ReadOnlyTextBoxStyle}" />
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>-->
                                                            <DataTrigger Binding="{Binding Value, Converter={StaticResource ShellPropertyConverter}, ConverterParameter=IsReadOnly}" Value="false">
                                                                <Setter TargetName="textboxPresenter" Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate>
                                                                            <controls:TextBox x:Name="textbox" Text="{Binding Value.ValueAsObject}" PlaceholderMode="OnFocus" >
                                                                                <controls:TextBox.PlaceholderProperties>
                                                                                    <MultiBinding Converter="{controls:PlaceholderPropertiesConverter}" ConverterParameter="{x:Static controls:PlaceholderPropertiesConverterEnum.Text}" >
                                                                                        <Binding Path="Value.Description.EditInvitation" Mode="OneWay" />
                                                                                    </MultiBinding>
                                                                                </controls:TextBox.PlaceholderProperties>
                                                                            </controls:TextBox>

                                                                            <!--<ControlTemplate.Triggers>
                                                                                <DataTrigger Binding="{Binding Value.ValueAsObject}" Value="{x:Null}" >
                                                                                    <Setter TargetName="textbox" Property="Text" Value="{Binding Value.Description.EditInvitation, Mode=OneWay}" />
                                                                                </DataTrigger>
                                                                            </ControlTemplate.Triggers>-->
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>

                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Value, Converter={StaticResource ShellPropertyConverter}, ConverterParameter=IsEnum}" Value="true" >
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                                <ComboBox ItemsSource="{Binding Value, Converter={StaticResource ShellPropertyConverter}, ConverterParameter=EnumValues}" SelectedItem="{Binding Value.ValueAsObject}" >
                                                                    <ComboBox.ItemContainerStyle>
                                                                        <Style TargetType="{x:Type ComboBoxItem}" >
                                                                            <Setter Property="Content" Value="{Binding DisplayText}" />
                                                                        </Style>
                                                                    </ComboBox.ItemContainerStyle>
                                                                </ComboBox>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Value, Converter={StaticResource ShellPropertyConverter}, ConverterParameter=IsArray}" Value="true" >
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type DataGridCell}" >
                                                                <Button Content="{StaticResource EditProperty}" />
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTemplateColumn.CellStyle>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>

                            <DataGrid.ItemContainerStyle>
                                <Style TargetType="{x:Type DataGridRow}">
                                    <Setter Property="Visibility" Value="{Binding Value, Converter={StaticResource ShellPropertyConverter}, ConverterParameter=Visibility}" />
                                </Style>
                            </DataGrid.ItemContainerStyle>
                        </DataGrid>
                    </TabItem>
                </TabControl>
            </Setter.Value>
        </Setter>
        <Setter Property="DialogButton" Value="OKApplyCancel" />
        <Setter Property="DefaultButton" Value="OK" />
    </Style>

    <Style TargetType="{x:Type dialogs:FilePropertyEditorDialog}" BasedOn="{StaticResource {x:Type Window}}" >
        <Setter Property="Content" Value="{StaticResource FilePropertyEditorDialogContent}" />
        <Setter Property="DialogButton" Value="OKApplyCancel" />
        <Setter Property="DefaultButton" Value="OK" />
    </Style>

    <Style BasedOn="{StaticResource {x:Type guiWindows:Window}}" TargetType="{x:Type dialogs:FoldersBrowserDialog}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dialogs:FoldersBrowserDialog}" >
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>

                        <ContentPresenter Grid.ColumnSpan="2" Content="{Binding ExplorerControl, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:FoldersBrowserDialog}}}" />
                        <ContentPresenter Grid.ColumnSpan="2" Grid.Row="1" />
                        <TextBox Grid.ColumnSpan="2" Grid.Row="2" Text="{Binding Text, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:FoldersBrowserDialog}}}" />
                        <ComboBox Grid.ColumnSpan="2" Grid.Row="3" ItemsSource="{Binding Filters, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:FoldersBrowserDialog}}}" SelectedItem="{Binding ExplorerControl.Filter, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:FoldersBrowserDialog}}, Converter={dialogsData:StringArrayToFoldersDialogFilterConverter}}" />
                        <ContentPresenter Grid.Row="4" Content="{Binding BottomDialogContent}" />
                        <StackPanel Grid.Column="1" Grid.Row="5" Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button>
                                <Button.Content>
                                    <MultiBinding Converter="{dialogs:FoldersBrowserDialogCommandButtonContentConverter}">
                                        <Binding Path="ExplorerControl.SelectedItem" />
                                        <Binding Path="Mode" />
                                    </MultiBinding>
                                </Button.Content>
                            </Button>
                            <Button Content="{StaticResource Cancel}" />
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Content" Value="Please choose an application to open the selected file..." />
    </Style>
</ResourceDictionary>
