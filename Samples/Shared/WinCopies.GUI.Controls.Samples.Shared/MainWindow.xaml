<windows:Window x:Class="WinCopies.GUI.Controls.Samples.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WinCopies.GUI.Controls.Samples"
        xmlns:commands="clr-namespace:WinCopies.Commands;assembly=WinCopies.Util.Desktop"
        xmlns:controls="clr-namespace:WinCopies.GUI.Controls;assembly=WinCopies.GUI"
        xmlns:windows="clr-namespace:WinCopies.GUI.Windows;assembly=WinCopies.GUI"
                xmlns:data="clr-namespace:WinCopies.Util.Data;assembly=WinCopies.Util.Desktop"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" AeroGlassCompositionActivated="True" HelpButton="True" CloseButton="False" HelpButtonClick="Window_HelpButtonClick">
    <DockPanel>
        <DockPanel DockPanel.Dock="Top">
            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                <Button Content="Open dialog..." Click="Button_Click" />
                <Button Content="Open Navigation Menu Window..." Click="Button_Click_1" />
                <Button Command="Close" Content="{Binding Text, Source={x:Static ApplicationCommands.Close}}" />
            </StackPanel>
            <CheckBox IsChecked="{Binding AeroGlassCompositionActivated, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type windows:Window}}}" />
        </DockPanel>
        <TabControl>
            <TabItem Header="_Label">
                <StackPanel Grid.Row="1">
                    <controls:Label Content="_Label" Padding="10" RecognizesAccessKey="True" />
                    <controls:Label Content="_Label" Padding="10" RecognizesAccessKey="False" />
                    <controls:Label Content="_Label" Padding="10" RecognizesAccessKey="True" IsEnabled="False" />
                    <controls:Label Content="_Label" Padding="10" RecognizesAccessKey="False" IsEnabled="False" />
                </StackPanel>
            </TabItem>
            <TabItem Header="L_ink">
                <StackPanel>
                    <GroupBox Header="Link">
                        <StackPanel>
                            <controls:Link UnderliningMode="None" Command="{x:Static commands:Commands.CommonCommand}" CommandParameter="Link - None">No underlining</controls:Link>
                            <controls:Link UnderliningMode="UnderlineWhenMouseOverOrFocused" Command="{x:Static commands:Commands.CommonCommand}" CommandParameter="Link - UnderlineWhenMouseOverOrFocused">Underlining when mouse over or focused</controls:Link>
                            <controls:Link UnderliningMode="UnderlineWhenNotMouseOverNorFocused" Command="{x:Static commands:Commands.CommonCommand}" CommandParameter="Link - UnderlineWhenNotMouseOverNorFocused">Underlining when not mouse over nor focused</controls:Link>
                            <controls:Link UnderliningMode="AlwaysUnderline" Command="{x:Static commands:Commands.CommonCommand}" CommandParameter="Link - AlwaysUnderline">Always underlining</controls:Link>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="LinkRun">
                        <StackPanel>
                            <TextBlock><controls:LinkRun UnderliningMode="None" Command="{x:Static commands:Commands.CommonCommand}" CommandParameter="Link - None">No underlining</controls:LinkRun></TextBlock>
                            <TextBlock><controls:LinkRun UnderliningMode="UnderlineWhenMouseOverOrFocused" Command="{x:Static commands:Commands.CommonCommand}" CommandParameter="Link - UnderlineWhenMouseOverOrFocused">Underlining when mouse over or focused</controls:LinkRun></TextBlock>
                            <TextBlock><controls:LinkRun UnderliningMode="UnderlineWhenNotMouseOverNorFocused" Command="{x:Static commands:Commands.CommonCommand}" CommandParameter="Link - UnderlineWhenNotMouseOverNorFocused">Underlining when not mouse over nor focused</controls:LinkRun></TextBlock>
                            <TextBlock><controls:LinkRun UnderliningMode="AlwaysUnderline" Command="{x:Static commands:Commands.CommonCommand}" CommandParameter="Link - AlwaysUnderline">Always underlining</controls:LinkRun></TextBlock>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </TabItem>
            <TabItem Header="_TextBox">
                <StackPanel>
                    <TextBox>Normal TextBox</TextBox>
                    <controls:PlaceholderTextBox>No placeholder TextBox</controls:PlaceholderTextBox>
                    <controls:PlaceholderTextBox PlaceholderMode="OnTextChanged">
                        <controls:PlaceholderTextBox.PlaceholderStyle>
                            <Style TargetType="{x:Type TextBox}">
                                <Setter Property="Foreground" Value="DimGray" />
                                <Setter Property="FontStyle" Value="Italic" />
                                <Setter Property="Text" Value="OnTextChanged-Placeholder TextBox" />
                            </Style>
                        </controls:PlaceholderTextBox.PlaceholderStyle>
                    </controls:PlaceholderTextBox>
                    <controls:PlaceholderTextBox PlaceholderMode="OnFocus">
                        <controls:PlaceholderTextBox.PlaceholderStyle>
                            <Style TargetType="{x:Type TextBox}">
                                <Setter Property="Foreground" Value="DimGray" />
                                <Setter Property="FontStyle" Value="Italic" />
                                <Setter Property="Text" Value="OnFocus-Placeholder TextBox" />
                            </Style>
                        </controls:PlaceholderTextBox.PlaceholderStyle>
                    </controls:PlaceholderTextBox>
                </StackPanel>
            </TabItem>
            <TabItem Header="_Switch">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <GroupBox>
                        <StackPanel>
                            <controls:Switch SwitcherShape="Ellipse" FlowDirection="RightToLeft" IsChecked="True" Content="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Command="{Binding SwitchCommand, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" />
                            <controls:Switch SwitcherShape="Ellipse" FlowDirection="RightToLeft" IsChecked="False" Content="Uncheckable" Command="{Binding SwitchCommand2, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" />
                            <controls:Switch IsThreeState="True" IsChecked="{x:Null}" SwitcherShape="Ellipse" FlowDirection="RightToLeft" Content="{Binding IsChecked, TargetNullValue=&lt;Null&gt;, RelativeSource={RelativeSource Self}}" Command="{Binding SwitchCommand, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" />
                            <controls:Switch IsThreeState="True" IsChecked="{x:Null}" SwitcherShape="Ellipse" FlowDirection="RightToLeft" Content="Uncheckable" Command="{Binding SwitchCommand2, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" />
                            <controls:Switch IsEnabled="False" SwitcherShape="Ellipse" IsChecked="True" FlowDirection="RightToLeft" Content="Uncheckable" Command="{Binding SwitchCommand2, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" />
                            <controls:Switch IsEnabled="False" SwitcherShape="Ellipse" FlowDirection="RightToLeft" Content="Uncheckable" Command="{Binding SwitchCommand2, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" />
                            <controls:Switch IsEnabled="False" IsThreeState="True" IsChecked="{x:Null}" SwitcherShape="Ellipse" FlowDirection="RightToLeft" Content="Uncheckable" Command="{Binding SwitchCommand2, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" />
                            <controls:Switch FlowDirection="RightToLeft" IsChecked="True" Content="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Command="{Binding SwitchCommand, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" />
                            <controls:Switch FlowDirection="RightToLeft" IsChecked="False" Content="Uncheckable" Command="{Binding SwitchCommand2, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" />
                            <controls:Switch IsThreeState="True" IsChecked="{x:Null}" FlowDirection="RightToLeft" Content="{Binding IsChecked, TargetNullValue=&lt;Null&gt;, RelativeSource={RelativeSource Self}}" Command="{Binding SwitchCommand, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" />
                            <controls:Switch IsThreeState="True" IsChecked="{x:Null}" FlowDirection="RightToLeft" Content="Uncheckable" Command="{Binding SwitchCommand2, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" />
                            <controls:Switch IsEnabled="False" IsChecked="True" FlowDirection="RightToLeft" Content="Uncheckable" Command="{Binding SwitchCommand2, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" />
                            <controls:Switch IsEnabled="False" FlowDirection="RightToLeft" Content="Uncheckable" Command="{Binding SwitchCommand2, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" />
                            <controls:Switch IsEnabled="False" IsThreeState="True" IsChecked="{x:Null}" FlowDirection="RightToLeft" Content="Uncheckable" Command="{Binding SwitchCommand2, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" />
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Grid.Column="1">
                        <StackPanel>
                            <controls:Switch IsIndeterminateAState="True" SwitcherShape="Ellipse" FlowDirection="RightToLeft" IsChecked="True" Content="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Command="{Binding SwitchCommand, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" />
                            <controls:Switch IsIndeterminateAState="True" SwitcherShape="Ellipse" FlowDirection="RightToLeft" IsChecked="False" Content="Uncheckable" Command="{Binding SwitchCommand2, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" />
                            <controls:Switch IsIndeterminateAState="True" IsThreeState="True" IsChecked="{x:Null}" SwitcherShape="Ellipse" FlowDirection="RightToLeft" Content="{Binding IsChecked, TargetNullValue=&lt;Null&gt;, RelativeSource={RelativeSource Self}}" Command="{Binding SwitchCommand, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" />
                            <controls:Switch IsIndeterminateAState="True" IsThreeState="True" IsChecked="{x:Null}" SwitcherShape="Ellipse" FlowDirection="RightToLeft" Content="Uncheckable" Command="{Binding SwitchCommand2, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" />
                            <controls:Switch IsIndeterminateAState="True" IsEnabled="False" SwitcherShape="Ellipse" IsChecked="True" FlowDirection="RightToLeft" Content="Uncheckable" Command="{Binding SwitchCommand2, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" />
                            <controls:Switch IsIndeterminateAState="True" IsEnabled="False" SwitcherShape="Ellipse" FlowDirection="RightToLeft" Content="Uncheckable" Command="{Binding SwitchCommand2, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" />
                            <controls:Switch IsIndeterminateAState="True" IsEnabled="False" IsThreeState="True" IsChecked="{x:Null}" SwitcherShape="Ellipse" FlowDirection="RightToLeft" Content="Uncheckable" Command="{Binding SwitchCommand2, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" />
                            <controls:Switch IsIndeterminateAState="True" FlowDirection="RightToLeft" IsChecked="True" Content="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Command="{Binding SwitchCommand, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" />
                            <controls:Switch IsIndeterminateAState="True" FlowDirection="RightToLeft" IsChecked="False" Content="Uncheckable" Command="{Binding SwitchCommand2, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" />
                            <controls:Switch IsIndeterminateAState="True" IsThreeState="True" IsChecked="{x:Null}" FlowDirection="RightToLeft" Content="{Binding IsChecked, TargetNullValue=&lt;Null&gt;, RelativeSource={RelativeSource Self}}" Command="{Binding SwitchCommand, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" />
                            <controls:Switch IsIndeterminateAState="True" IsThreeState="True" IsChecked="{x:Null}" FlowDirection="RightToLeft" Content="Uncheckable" Command="{Binding SwitchCommand2, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" />
                            <controls:Switch IsIndeterminateAState="True" IsEnabled="False" IsChecked="True" FlowDirection="RightToLeft" Content="Uncheckable" Command="{Binding SwitchCommand2, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" />
                            <controls:Switch IsIndeterminateAState="True" IsEnabled="False" FlowDirection="RightToLeft" Content="Uncheckable" Command="{Binding SwitchCommand2, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" />
                            <controls:Switch IsIndeterminateAState="True" IsEnabled="False" IsThreeState="True" IsChecked="{x:Null}" FlowDirection="RightToLeft" Content="Uncheckable" Command="{Binding SwitchCommand2, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" />
                        </StackPanel>
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem Header="_NumericUpDown">
                <controls:NumericUpDown VerticalAlignment="Top" MinValue="-10" MaxValue="10" Step="0.5" ValueChanged="NumericUpDown_ValueChanged" />
            </TabItem>
        </TabControl>
    </DockPanel>
</windows:Window>
