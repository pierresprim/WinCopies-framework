<!--Copyright © Pierre Sprimont, 2020

This file is part of the WinCopies Framework.

The WinCopies Framework is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

The WinCopies Framework is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with the WinCopies Framework.  If not, see<https://www.gnu.org/licenses/>.-->

<windows:Window x:Class="WinCopies.GUI.Samples.ExplorerControlTest"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WinCopies.GUI.Samples"
        xmlns:controls="clr-namespace:WinCopies.GUI.Controls;assembly=WinCopies.GUI"
        xmlns:util="clr-namespace:WinCopies;assembly=WinCopies.Util.Desktop"
        xmlns:commands="clr-namespace:WinCopies.Commands;assembly=WinCopies.Util.Desktop"
        xmlns:io="clr-namespace:WinCopies.GUI.IO.ObjectModel;assembly=WinCopies.GUI.IO"
        xmlns:windows="clr-namespace:WinCopies.GUI.Windows;assembly=WinCopies.GUI"
        mc:Ignorable="d"
        Title="ExplorerControlTest" Height="450" Width="800">
    <!--<Window.CommandBindings>
        <CommandBinding Command="{x:Static commands:ApplicationCommands.NewTab}" CanExecute="Command_CanExecute" Executed="NewTab_Executed" />
        <CommandBinding Command="{x:Static commands:ApplicationCommands.CloseTab}" CanExecute="CloseTab_CanExecute" Executed="CloseTab_Executed" />
        <CommandBinding Command="{x:Static NavigationCommands.BrowseBack}" CanExecute="Window_PreviousCanExecute" Executed="Window_PreviousExecuted" />
        <CommandBinding Command="{x:Static NavigationCommands.BrowseForward}" CanExecute="Window_NextCanExecute" Executed="Window_NextExecuted" />
    </Window.CommandBindings>
    <DockPanel>
        <StackPanel DockPanel.Dock="Top">
            <Menu>
                <Menu.Resources>
                    <Style x:Key="MenuItemItemContainerStyle" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                        <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
                        <Setter Property="Header" Value="{Binding Header}" />
                        <Setter Property="ItemsSource" Value="{Binding Items}" />
                        <Setter Property="Command" Value="{Binding Command}" />
                        <Setter Property="CommandParameter" Value="{Binding CommandParameter}" />
                        <Setter Property="CommandTarget" Value="{Binding CommandTarget}" />
                    </Style>
                </Menu.Resources>
                <MenuItem Header="File">
                    <MenuItem Header="New tab" Command="{x:Static commands:ApplicationCommands.NewTab}" />
                </MenuItem>
                <MenuItem Header="_Edit">
                    <MenuItem Header="Copy" Command="Copy" />
                    <MenuItem Header="Cut" Command="Cut" />
                    <MenuItem Header="Paste" Command="Paste" />
                    <MenuItem Header="Recycle" Command="Delete" />
                    <MenuItem Header="Empty Recycle Bin" Command="{x:Static commands:ApplicationCommands.Empty}" />
                    <MenuItem Header="Delete" Command="{x:Static commands:ApplicationCommands.DeletePermanently}" />
                </MenuItem>
                <MenuItem Header="Open _with" ItemsSource="{Binding SelectedItem.BrowsabilityPaths, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExplorerControlTest}}}" ItemContainerStyle="{StaticResource MenuItemItemContainerStyle}" />
                <MenuItem Header="_Tools" ItemsSource="{Binding SelectedItem.CustomProcesses, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ExplorerControlTest}}}" ItemContainerStyle="{StaticResource MenuItemItemContainerStyle}" />
            </Menu>
            <StackPanel Orientation="Horizontal">
                <RadioButton Content="Shell" IsChecked="True" GroupName="View" Checked="RadioButton_Checked" />
                <RadioButton Content="Registry" GroupName="View" Margin="10,0,0,0" Checked="RadioButton_Checked" />
                <RadioButton Content="WMI" GroupName="View" Margin="10,0,0,0" Checked="RadioButton_Checked" />
            </StackPanel>
        </StackPanel>
        <TabControl ItemsSource="{Binding Items}" SelectedItem="{Binding SelectedItem, Mode=OneWayToSource}" Style="{StaticResource WinCopies.TabControlStyle}">
            <TabControl.ItemContainerStyle>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Header" Value="{Binding}" />
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate DataType="{x:Type io:IExplorerControlBrowsableObjectInfoViewModel}">
                                <DockPanel>
                                    <Image DockPanel.Dock="Left" Source="{Binding Path.BitmapSources.Medium}" Height="32" Width="32" />
                                    <controls:Label Content="{Binding Path.Name}" RecognizesAccessKey="False" VerticalContentAlignment="Center" />
                                    <Button DockPanel.Dock="Right" Content="X" Command="{x:Static commands:ApplicationCommands.CloseTab}" CommandParameter="{Binding}" Height="20" Width="20" />
                                </DockPanel>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="ContentTemplateSelector">
                        <Setter.Value>
                            <util:InterfaceDataTemplateSelector />
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.ItemContainerStyle>
        </TabControl>
    </DockPanel>-->
</windows:Window>
