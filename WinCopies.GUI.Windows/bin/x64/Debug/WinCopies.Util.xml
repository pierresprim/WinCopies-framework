<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WinCopies.Util</name>
    </assembly>
    <members>
        <!-- Commentaire XML incorrect pour le membre "T:WinCopies.Util.BackgroundWorker" -->
        <member name="E:WinCopies.Util.BackgroundWorker.DoWork">
            <summary>
                ''' Cet evènement se produit lorsque le thread d'arrière plan démarre, placez votre code de traitement ici.
                ''' Handler exécuté dans le thread d'arrière plan.
                ''' </summary>
        </member>
        <member name="E:WinCopies.Util.BackgroundWorker.ProgressChanged">
            <summary>
                ''' Cet évènement se produit lorsque le thread d'arrière plan notifie de sa progression.
                ''' Handler exécuté dans le thread d'interface graphique.
                ''' </summary>
        </member>
        <member name="E:WinCopies.Util.BackgroundWorker.RunWorkerCompleted">
            <summary>
                ''' Cet évènement se produit lorsque le thread d'arrière plan est terminé.
                ''' Handler exécuté dans le thread d'arrière plan.
                ''' </summary>
        </member>
        <member name="P:WinCopies.Util.BackgroundWorker.CancellationPending">
            <summary>
                ''' Obtient une valeur indiquant si le thread tente de se terminer avant la fin de ses tâches en arrière-plan.
                ''' </summary>
                ''' <returns>Retourne True si le thread tente de s'arrêter avant la fin, sinon False.</returns>
        </member>
        <member name="P:WinCopies.Util.BackgroundWorker.IsBusy">
            <summary>
                ''' Obtient une valeur indiquant si le thread est en cours d'exécution.
                ''' </summary>
        </member>
        <member name="P:WinCopies.Util.BackgroundWorker.WorkerReportsProgress">
            <summary>
                ''' Obtient ou définit une valeur indiquant si le thread notifie de l'avancement.
                ''' </summary>
        </member>
        <member name="P:WinCopies.Util.BackgroundWorker.WorkerSupportsCancellation">
            <summary>
                ''' Obtient ou définit une valeur indiquant si le thread supporte l'annulation.
                ''' </summary>
        </member>
        <member name="M:WinCopies.Util.BackgroundWorker.#ctor">
            <summary>
                ''' Construit un <see cref="T:WinCopies.Util.BackgroundWorker"/>.
                ''' </summary>
        </member>
        <member name="M:WinCopies.Util.BackgroundWorker.#ctor(System.Threading.ApartmentState)">
            <summary>
                ''' Construit un <see cref="T:WinCopies.Util.BackgroundWorker"/>.
                ''' </summary>
                ''' <param name="apartmentState"><see cref="T:System.Threading.ApartmentState"/> dans lequel créer le thread.</param>
        </member>
        <member name="M:WinCopies.Util.BackgroundWorker.Reset">
            <summary>
                ''' Ré-initialise les variables locales.
                ''' </summary>
        </member>
        <member name="M:WinCopies.Util.BackgroundWorker.RunWorkerAsync">
            <summary>
                ''' Démarre le traitement.
                ''' </summary>
        </member>
        <member name="M:WinCopies.Util.BackgroundWorker.RunWorkerAsync(System.Object)">
            <summary>
                ''' Démarre le traitement.
                ''' </summary>
                ''' <param name="argument">Argument passé au traitement.</param>
        </member>
        <member name="M:WinCopies.Util.BackgroundWorker.ThreadStart(System.ComponentModel.DoWorkEventArgs)">
            <summary>
                ''' Point d'entré du thread.
                ''' </summary>
                ''' <param name="argument">Argument du thread.</param>
        </member>
        <member name="M:WinCopies.Util.BackgroundWorker.ThreadCompleted(System.Object)">
            <summary>
                ''' Cette méthode est appelée lorsque le thread est terminé.
                ''' </summary>
                ''' <param name="result">Objet résultat du traitement.</param>
                ''' <param name="error">Erreur éventuelle. <c>null</c> si pas d'erreur.</param>
                ''' <param name="cancel">Indique si le thread à été annulé ou non.</param>
        </member>
        <member name="M:WinCopies.Util.BackgroundWorker.CancelAsync">
            <summary>
                ''' Annule le traitement en cours.
                ''' </summary>
        </member>
        <member name="M:WinCopies.Util.BackgroundWorker.Cancel">
            <summary>
                ''' Annule le traitement en cours.
                ''' </summary>
        </member>
        <member name="M:WinCopies.Util.BackgroundWorker.OnProgressChanged(System.Object)">
            <summary>
                ''' Délégué pour rapporter la progression.
                ''' </summary>
                ''' <param name="args">Argument de l'évènement.</param>
        </member>
        <member name="M:WinCopies.Util.BackgroundWorker.ReportProgress(System.Int32)">
            <summary>
                ''' Notifier de la progession.
                ''' </summary>
                ''' <param name="percentProgress">Pourcentage de progression.</param>
        </member>
        <member name="M:WinCopies.Util.BackgroundWorker.ReportProgress(System.Int32,System.Object)">
            <summary>
                ''' Notifier de la pogression.
                ''' </summary>
                ''' <param name="percentProgress">Pourcentage de progression.</param>
                ''' <param name="userState">Objet utilisateur.</param>
        </member>
        <member name="T:WinCopies.Util.DataConverters.BaseConverter">
            <summary>
            Provides a base-class for any data <see cref="T:System.Windows.Data.Binding"/> converter and can be directly use in an XAML view.
            </summary>
        </member>
        <member name="M:WinCopies.Util.DataConverters.BaseConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns <see langword="null"/>, the valid null value is used.</returns>
        </member>
        <member name="M:WinCopies.Util.DataConverters.BaseConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns <see langword="null"/>, the valid null value is used.</returns>
        </member>
        <member name="T:WinCopies.Util.DataConverters.BaseMultiConverter">
            <summary>
            Provides a base-class for any data-<see cref="T:System.Windows.Data.MultiBinding"/> converter and can be directly use in an XAML view.
            </summary>
        </member>
        <member name="M:WinCopies.Util.DataConverters.BaseMultiConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts source values to a value for the binding target. The data binding engine calls this method when it propagates the values from source bindings to the binding target.
            </summary>
            <param name="values">The array of values that the source bindings in the <see cref="T:System.Windows.Data.MultiBinding"/> produces. The value <see cref="F:System.Windows.DependencyProperty.UnsetValue"/> indicates that the source binding has no value to provide for conversion.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:WinCopies.Util.DataConverters.BaseMultiConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a binding target value to the source binding values.
            </summary>
            <param name="value">The value that the binding target produces.</param>
            <param name="targetTypes">The array of types to convert to. The array length indicates the number and types of values that are suggested for the method to return.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>An array of values that have been converted from the target value back to the source values.</returns>
        </member>
        <member name="T:WinCopies.Util.DataConverters.EnumToBooleanConverter">
            <summary>
            Data converter for checking wheter an enum equals a parameter.
            </summary>
            <remarks>This class can also work for numeric types (int, ...)</remarks>
        </member>
        <member name="M:WinCopies.Util.DataConverters.EnumToBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Checks if an enum value equals a parameter.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property. This type must be <see cref="T:System.Boolean"/>.</param>
            <param name="parameter">The converter parameter to use. This represents the value to compare with the value.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns></returns>
        </member>
        <member name="T:WinCopies.Util.Extensions">
            <summary>
            Provides static extensions methods.
            </summary>
        </member>
        <member name="M:WinCopies.Util.Extensions.IsNumber(System.Object)">
            <summary>
            Checks if a object is numeric.
            </summary>
            <remarks>This function makes a check at the object type. For a string-parsing-checking for numerical value, look at the <see cref="M:WinCopies.Util.Extensions.IsNumeric(System.String,System.Decimal@)"/> function.</remarks>
            <param name="value">The object to check</param>
            <returns>A <see cref="T:System.Boolean"/> value indicates wether the object given is a numerical type of not.</returns>
        </member>
        <member name="M:WinCopies.Util.Extensions.IsNumeric(System.String,System.Decimal@)">
            <summary>
            Checks if a <see cref="T:System.String"/> is a numerical value.
            </summary>
            <remarks>This function tries to parse a <see cref="T:System.String"/> value to a <see cref="T:System.Decimal"/> value. Given that <see cref="T:System.Decimal"/> type is the greatest numerical type in the .NET framework, all the numbers can be supported in the .NET framework can be set in a <see cref="T:System.Decimal"/> object.</remarks>
            <param name="s">The <see cref="T:System.String"/> to check</param>
            <param name="d">The <see cref="T:System.Decimal"/> in which one set the <see cref="T:System.Decimal"/> value</param>
            <returns>A <see cref="T:System.Boolean"/> value indicates wether the <see cref="T:System.String"/> given is a <see cref="T:System.Decimal"/> or not.</returns>
        </member>
        <member name="M:WinCopies.Util.Extensions.Sort``1(System.Collections.ObjectModel.ObservableCollection{``0})">
            <summary>
            Sort an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/>.
            </summary>
            <typeparam name="T">The type of the values in the <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/>.</typeparam>
            <param name="oc">The <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> to sort.</param>
        </member>
        <member name="M:WinCopies.Util.Extensions.Sort``1(System.Collections.ObjectModel.ObservableCollection{``0},System.Collections.Generic.IComparer{``0})">
            <summary>
            Sort an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> with a user-defined comparer.
            </summary>
            <typeparam name="T">The type of the values in the <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/>.</typeparam>
            <param name="oc">The <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> to sort.</param>
            <param name="comparer">An <see cref="T:System.Collections.Generic.IComparer`1"/> providing comparison for sorting the <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/>.</param>
        </member>
    </members>
</doc>
