<!-- Copyright © Pierre Sprimont, 2020
 
  This file is part of the WinCopies Framework.
 
  The WinCopies Framework is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.
 
  The WinCopies Framework is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
 
  You should have received a copy of the GNU General Public License
  along with the WinCopies Framework.  If not, see <https://www.gnu.org/licenses/>. -->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:WinCopies.GUI.Templates"
    xmlns:media="clr-namespace:System.Windows.Media;assembly=PresentationCore"
    xmlns:drawing="clr-namespace:System.Drawing;assembly=System.Drawing"
    xmlns:controls="clr-namespace:WinCopies.GUI.Controls.Models;assembly=WinCopies.GUI.Models"
    xmlns:util="clr-namespace:WinCopies;assembly=WinCopies.Util.Desktop"
    xmlns:converters="clr-namespace:WinCopies.Util.Data;assembly=WinCopies.Util.Desktop"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:input="clr-namespace:System.Windows.Input;assembly=PresentationCore"
    xmlns:gui="clr-namespace:WinCopies.GUI.Controls;assembly=WinCopies.GUI"
    xmlns:models="clr-namespace:WinCopies.GUI.Controls.Models;assembly=WinCopies.GUI.Models">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary>
            <!--Data converters-->
            <local:ModelToBooleanConverter x:Key="DefaultModelToBooleanConverter" />
            <converters:BitmapToImageSourceConverter x:Key="BitmapToImageSourceConverter" />
            <converters:IconToImageSourceConverter x:Key="IconToImageSourceConverter" />
            <converters:ActionToDelegateCommand2Converter x:Key="ActionToDelegateCommand2Converter" />
            <!--End of Data Converters Section-->
            <Style x:Key="ControlStyle" TargetType="{x:Type Control}">
                <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
            </Style>
            <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ControlStyle}">
                <Setter Property="IsChecked" Value="{Binding IsChecked}" />
                <Setter Property="IsThreeState" Value="{Binding IsThreeState}" />
            </Style>
            <Style x:Key="ContentControlStyle" TargetType="{x:Type ContentControl}" BasedOn="{StaticResource ControlStyle}">
                <Setter Property="Content" Value="{Binding Content}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Converter={StaticResource DefaultModelToBooleanConverter}, ConverterParameter={x:Static local:ModelToBooleanConverterParameter.Content}}" Value="true">
                        <Setter Property="ContentTemplateSelector" Value="{Binding ModelDataTemplateSelectors.ContentDataTemplateSelector}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ItemsControlStyle" TargetType="{x:Type ItemsControl}" BasedOn="{StaticResource ControlStyle}">
                <Setter Property="ItemsSource" Value="{Binding Items}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Converter={StaticResource DefaultModelToBooleanConverter}, ConverterParameter={x:Static local:ModelToBooleanConverterParameter.Items}}" Value="true" >
                        <Setter Property="ItemTemplateSelector" Value="{Binding ModelDataTemplateSelectors.ItemDataTemplateSelector}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="HeaderedContentControlStyle" TargetType="{x:Type HeaderedContentControl}" BasedOn="{StaticResource ContentControlStyle}">
                <Setter Property="Header" Value="{Binding Header}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Converter={StaticResource DefaultModelToBooleanConverter}, ConverterParameter={x:Static local:ModelToBooleanConverterParameter.Header}}" Value="true">
                        <Setter Property="HeaderTemplateSelector" Value="{Binding ModelDataTemplateSelectors.HeaderDataTemplateSelector}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="HeaderedItemsControlStyle" TargetType="{x:Type HeaderedItemsControl}" BasedOn="{StaticResource ItemsControlStyle}">
                <Setter Property="Header" Value="{Binding Header}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Converter={StaticResource DefaultModelToBooleanConverter}, ConverterParameter={x:Static local:ModelToBooleanConverterParameter.Header}}" Value="true">
                        <Setter Property="HeaderTemplateSelector" Value="{Binding ModelDataTemplateSelectors.HeaderDataTemplateSelector}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ControlStyle}">
                <Setter Property="Command" Value="{Binding Command}" />
                <Setter Property="CommandParameter" Value="{Binding CommandParameter}" />
                <Setter Property="CommandTarget" Value="{Binding CommandTarget}" />
            </Style>
            <Style x:Key="MenuItemStyle" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource ControlStyle}">
                <Setter Property="Command" Value="{Binding Command}" />
                <Setter Property="CommandParameter" Value="{Binding CommandParameter}" />
                <Setter Property="CommandTarget" Value="{Binding CommandTarget}" />
            </Style>
            <Style x:Key="MenuItemStyle2" TargetType="{x:Type MenuItem}">
                <Setter Property="Icon" Value="{Binding Icon}" />
                <Setter Property="Header" Value="{Binding Name}" />
                <Setter Property="ToolTip" Value="{Binding Description}" />

                <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />

                <Setter Property="IsChecked" Value="{Binding IsChecked}" />

                <Setter Property="Command" Value="{Binding Command}" />

                <Setter Property="ItemsSource" Value="{Binding Items}" />

                <Setter Property="UsesItemContainerTemplate" Value="true" />
                <Setter Property="ItemContainerTemplateSelector">
                    <Setter.Value>
                        <local:MenuItemTemplateSelector />
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TextBoxStyleTextOriented" TargetType="{x:Type TextBox}" BasedOn="{StaticResource ControlStyle}">
                <Setter Property="Text" Value="{Binding Text}" />
                <Setter Property="IsReadOnly" Value="{Binding IsReadOnly}" />
            </Style>
            <Style x:Key="TextBoxStyleSelectionOriented" TargetType="{x:Type TextBox}" BasedOn="{StaticResource ControlStyle}">
                <Setter Property="IsReadOnlyCaretVisible" Value="{Binding IsReadOnlyCaretVisible}" />
                <Setter Property="AutoWordSelection" Value="{Binding AutoWordSelection}" />
                <Setter Property="SelectionBrush" Value="{Binding SelectionBrush}" />
                <Setter Property="SelectionOpacity" Value="{Binding SelectionOpacity}" />
                <!--<Setter Property="SelectionTextBrush" Value="{Binding SelectionTextBrush}" />-->
                <Setter Property="CaretBrush" Value="{Binding CaretBrush}" />
                <Setter Property="IsInactiveSelectionHighlightEnabled" Value="{Binding IsInactiveSelectionHighlightEnabled}" />
            </Style>
            <Style x:Key="TextBoxStyleTextEditingOriented" TargetType="{x:Type TextBox}" BasedOn="{StaticResource ControlStyle}">
                <Setter Property="MinLines" Value="{Binding MinLines}" />
                <Setter Property="MaxLines" Value="{Binding MaxLines}" />
                <Setter Property="CharacterCasing" Value="{Binding CharacterCasing}" />
                <Setter Property="MaxLength" Value="{Binding MaxLength}" />
                <Setter Property="TextAlignment" Value="{Binding TextAlignment}" />
                <Setter Property="TextDecorations" Value="{Binding TextDecorations}" />
                <Setter Property="TextWrapping" Value="{Binding TextWrapping}" />
                <Setter Property="AcceptsReturn" Value="{Binding AcceptsReturn}" />
                <Setter Property="AcceptsTab" Value="{Binding AcceptsTab}" />
                <Setter Property="IsUndoEnabled" Value="{Binding IsUndoEnabled}" />
                <Setter Property="UndoLimit" Value="{Binding UndoLimit}" />
            </Style>
            <!--todo: add a RadioButtonItemsControl control-->
            <Style x:Key="RadioButtonStyle" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource ControlStyle}">
                <Setter Property="GroupName" Value="{Binding GroupName}" />
            </Style>

            <DataTemplate x:Key="MenuItemDataTemplate">
                <MenuItem Style="{StaticResource MenuItemStyle2}" />
            </DataTemplate>
            <DataTemplate x:Key="SeparatorDataTemplate">
                <Separator />
            </DataTemplate>
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate DataType="{x:Type controls:IMultiInput}">
        <DockPanel>
            <Label DockPanel.Dock="Top" Content="{Binding Description}"/>
            <ListView ItemsSource="{Binding}">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Name}" />
                        <GridViewColumn Header="Value">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <DockPanel>
                                        <gui:PlaceholderTextBox Text="{Binding Text}" MinWidth="100">
                                            <gui:PlaceholderTextBox.PlaceholderStyle>
                                                <Style TargetType="{x:Type gui:PlaceholderTextBox}">
                                                    <Setter Property="Text" Value="{Binding Placeholder}" />
                                                </Style>
                                            </gui:PlaceholderTextBox.PlaceholderStyle>
                                        </gui:PlaceholderTextBox>
                                        <Label DockPanel.Dock="Bottom" Content="{Binding Description}" FontStyle="Italic" />
                                    </DockPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
        </DockPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type sys:Action}">
        <Button Command="{Binding Converter={StaticResource ActionToDelegateCommand2Converter}}" />
    </DataTemplate>
    <DataTemplate DataType="{x:Type input:ICommandSource}">
        <Button Command="{Binding Command}" CommandParameter="{Binding CommandParameter}" CommandTarget="{Binding CommandTarget}" />
    </DataTemplate>
    <DataTemplate DataType="{x:Type input:RoutedUICommand}">
        <Button Command="{Binding}" Content="{Binding Text}" />
    </DataTemplate>
    <ControlTemplate x:Key="DecoratedContentControlContentTemplate" TargetType="{x:Type local:DecoratedContentControlContent}">
        <DockPanel>
            <ContentControl DockPanel.Dock="Left" Content="{TemplateBinding ContentDecoration}" />
            <ContentControl Content="{TemplateBinding Content}" />
        </DockPanel>
    </ControlTemplate>
    <Style TargetType="{x:Type local:DecoratedContentControlContent}">
        <Setter Property="Template" Value="{StaticResource DecoratedContentControlContentTemplate}" />
    </Style>
    <DataTemplate DataType="{x:Type controls:IExtendedButtonModel}">
        <Button>
            <Button.Style>
                <util:MergedStyles>
                    <util:MergedStyles.Styles>
                        <x:Array Type="Style">
                            <StaticResource ResourceKey="ContentControlStyle" />
                            <StaticResource ResourceKey="ButtonStyle" />
                            <StaticResource ResourceKey="{x:Type Button}" />
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <local:DecoratedContentControlContent ContentDecoration="{Binding ContentDecoration}" Content="{Binding Content}" ToolTip="{Binding ToolTip}" />
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </x:Array>
                    </util:MergedStyles.Styles>
                </util:MergedStyles>
            </Button.Style>
        </Button>
    </DataTemplate>
    <DataTemplate DataType="{x:Type media:ImageSource}">
        <Image Source="{Binding Mode=OneWay}" />
    </DataTemplate>
    <DataTemplate DataType="{x:Type drawing:Bitmap}">
        <Image Source="{Binding Mode=OneWay, Converter={StaticResource BitmapToImageSourceConverter}}" />
    </DataTemplate>
    <DataTemplate DataType="{x:Type drawing:Icon}">
        <Image Source="{Binding Mode=OneWay, Converter={StaticResource IconToImageSourceConverter}}" />
    </DataTemplate>
    <DataTemplate DataType="{x:Type controls:IContentControlModel}">
        <ContentControl Style="{StaticResource ContentControlStyle}" />
    </DataTemplate>
    <DataTemplate DataType="{x:Type controls:IHeaderedContentControlModel}">
        <HeaderedContentControl Style="{StaticResource HeaderedContentControlStyle}" />
    </DataTemplate>
    <DataTemplate DataType="{x:Type controls:IItemsControlModel}">
        <ItemsControl Style="{StaticResource ItemsControlStyle}" />
    </DataTemplate>
    <DataTemplate DataType="{x:Type controls:IHeaderedItemsControlModel}">
        <HeaderedItemsControl Style="{StaticResource HeaderedItemsControlStyle}" />
    </DataTemplate>
    <DataTemplate DataType="{x:Type controls:IGroupBoxModel}">
        <GroupBox>
            <GroupBox.Style>
                <util:MergedStyles>
                    <util:MergedStyles.Styles>
                        <x:Array Type="Style">
                            <StaticResource ResourceKey="HeaderedContentControlStyle" />
                            <StaticResource ResourceKey="{x:Type GroupBox}" />
                        </x:Array>
                    </util:MergedStyles.Styles>
                </util:MergedStyles>
            </GroupBox.Style>
        </GroupBox>
    </DataTemplate>
    <DataTemplate DataType="{x:Type controls:ITabItemModel}">
        <TabItem>
            <TabItem.Style>
                <util:MergedStyles>
                    <util:MergedStyles.Styles>
                        <x:Array Type="Style">
                            <StaticResource ResourceKey="HeaderedContentControlStyle" />
                            <StaticResource ResourceKey="{x:Type TabItem}" />
                        </x:Array>
                    </util:MergedStyles.Styles>
                </util:MergedStyles>
            </TabItem.Style>
        </TabItem>
    </DataTemplate>
    <DataTemplate DataType="{x:Type controls:IButtonModel}">
        <Button>
            <Button.Style>
                <util:MergedStyles>
                    <util:MergedStyles.Styles>
                        <x:Array Type="Style">
                            <StaticResource ResourceKey="ContentControlStyle" />
                            <StaticResource ResourceKey="ButtonStyle" />
                            <StaticResource ResourceKey="{x:Type Button}" />
                        </x:Array>
                    </util:MergedStyles.Styles>
                </util:MergedStyles>
            </Button.Style>
        </Button>
    </DataTemplate>
    <DataTemplate DataType="{x:Type controls:IToggleButtonModel}">
        <ToggleButton>
            <ToggleButton.Style>
                <util:MergedStyles>
                    <util:MergedStyles.Styles>
                        <x:Array Type="Style">
                            <StaticResource ResourceKey="ContentControlStyle" />
                            <StaticResource ResourceKey="ButtonStyle" />
                            <StaticResource ResourceKey="ToggleButtonStyle" />
                            <StaticResource ResourceKey="{x:Type ToggleButton}" />
                        </x:Array>
                    </util:MergedStyles.Styles>
                </util:MergedStyles>
            </ToggleButton.Style>
        </ToggleButton>
    </DataTemplate>
    <DataTemplate DataType="{x:Type controls:ITextBoxModelTextOriented}">
        <TextBox>
            <TextBox.Style>
                <util:MergedStyles>
                    <util:MergedStyles.Styles>
                        <x:Array Type="Style">
                            <StaticResource ResourceKey="TextBoxStyleTextOriented" />
                            <StaticResource ResourceKey="{x:Type TextBox}" />
                        </x:Array>
                    </util:MergedStyles.Styles>
                </util:MergedStyles>
            </TextBox.Style>
        </TextBox>
    </DataTemplate>
    <DataTemplate DataType="{x:Type controls:ITextBoxModelSelectionOriented}">
        <TextBox>
            <TextBox.Style>
                <util:MergedStyles>
                    <util:MergedStyles.Styles>
                        <x:Array Type="Style">
                            <StaticResource ResourceKey="TextBoxStyleTextOriented" />
                            <StaticResource ResourceKey="TextBoxStyleSelectionOriented" />
                            <StaticResource ResourceKey="{x:Type TextBox}" />
                        </x:Array>
                    </util:MergedStyles.Styles>
                </util:MergedStyles>
            </TextBox.Style>
        </TextBox>
    </DataTemplate>
    <DataTemplate DataType="{x:Type controls:ITextBoxModelTextEditingOriented}">
        <TextBox>
            <TextBox.Style>
                <util:MergedStyles>
                    <util:MergedStyles.Styles>
                        <x:Array Type="Style">
                            <StaticResource ResourceKey="TextBoxStyleTextOriented" />
                            <StaticResource ResourceKey="TextBoxStyleTextEditingOriented" />
                            <StaticResource ResourceKey="{x:Type TextBox}" />
                        </x:Array>
                    </util:MergedStyles.Styles>
                </util:MergedStyles>
            </TextBox.Style>
        </TextBox>
    </DataTemplate>
    <DataTemplate DataType="{x:Type controls:ITextBoxModel}">
        <TextBox>
            <TextBox.Style>
                <util:MergedStyles>
                    <util:MergedStyles.Styles>
                        <x:Array Type="Style">
                            <StaticResource ResourceKey="TextBoxStyleTextOriented" />
                            <StaticResource ResourceKey="TextBoxStyleSelectionOriented" />
                            <StaticResource ResourceKey="TextBoxStyleTextEditingOriented" />
                            <StaticResource ResourceKey="{x:Type TextBox}" />
                        </x:Array>
                    </util:MergedStyles.Styles>
                </util:MergedStyles>
            </TextBox.Style>
        </TextBox>
    </DataTemplate>
    <DataTemplate DataType="{x:Type controls:ICheckBoxModel}">
        <CheckBox>
            <CheckBox.Style>
                <util:MergedStyles>
                    <util:MergedStyles.Styles>
                        <x:Array Type="Style">
                            <StaticResource ResourceKey="ContentControlStyle" />
                            <StaticResource ResourceKey="ButtonStyle" />
                            <StaticResource ResourceKey="ToggleButtonStyle" />
                            <StaticResource ResourceKey="{x:Type CheckBox}" />
                            <Style TargetType="{x:Type CheckBox}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Converter={local:ModelToBooleanConverter}, ConverterParameter={x:Static local:ModelToBooleanConverterParameter.Content}}" Value="true">
                                        <Setter Property="ContentTemplateSelector" Value="{Binding ModelDataTemplateSelectors.ContentDataTemplateSelector}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </x:Array>
                    </util:MergedStyles.Styles>
                </util:MergedStyles>
            </CheckBox.Style>
        </CheckBox>
    </DataTemplate>
    <DataTemplate DataType="{x:Type controls:IGroupingRadioButtonModel}">
        <RadioButton>
            <RadioButton.Style>
                <util:MergedStyles>
                    <util:MergedStyles.Styles>
                        <x:Array Type="Style">
                            <StaticResource ResourceKey="ContentControlStyle" />
                            <StaticResource ResourceKey="ButtonStyle" />
                            <StaticResource ResourceKey="ToggleButtonStyle" />
                            <StaticResource ResourceKey="RadioButtonStyle" />
                            <StaticResource ResourceKey="{x:Type RadioButton}" />
                        </x:Array>
                    </util:MergedStyles.Styles>
                </util:MergedStyles>
            </RadioButton.Style>
        </RadioButton>
    </DataTemplate>
</ResourceDictionary>



<!--<DataTemplate DataType="{x:Type dialogModels:PropertyDialogModelBase }">
    <TabControl>
        <TabControl.Style>
            <Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource {x:Type TabControl}}">
                <Setter Property="ItemsSource" Value="{Binding Items, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dialogs:PropertyDialog}}}" />
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TabItem>
                                <TabItem.Style>
                                    <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate></DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </TabItem.Style>
                            </TabItem>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </TabControl.Style>
    </TabControl>
</DataTemplate>

<Style BasedOn="{StaticResource {x:Type guiDialogs:DialogWindow}}" TargetType="{x:Type dialogs:PropertyDialog}">

    <Setter Property="Title" Value="{Binding Title}" />

</Style>-->
