<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:WinCopies.GUI.Controls"
    xmlns:commands="clr-namespace:WinCopies.Commands;assembly=WinCopies.Util.Desktop"
    xmlns:icons="clr-namespace:WinCopies.GUI.Icons.Properties;assembly=WinCopies.GUI.Icons"
    xmlns:util="clr-namespace:WinCopies;assembly=WinCopies.Util.Desktop"
    xmlns:converters="clr-namespace:WinCopies.Util.Data;assembly=WinCopies.Util.Desktop"
    xmlns:temp="clr-namespace:WinCopies;assembly=WinCopies.Util.Temp">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/wincopies.gui.templates;component/Themes/Generic.xaml" />
        <ResourceDictionary>
            <!--Converters-->
            <converters:IsNullConverter x:Key="IsNullConverter" />
            <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <!--End of Converters Section-->
            <ContextMenu x:Key="TextBoxContextMenu">
                <MenuItem Command="{x:Static ApplicationCommands.Undo}" Icon="{x:Static icons:Resources.arrow_undo}" />
                <MenuItem Command="{x:Static ApplicationCommands.Redo}" Icon="{x:Static icons:Resources.arrow_redo}" />
                <Separator />
                <MenuItem Command="{x:Static ApplicationCommands.Cut}" Icon="{x:Static icons:Resources.cut}" />
                <MenuItem Command="{x:Static ApplicationCommands.Copy}" Icon="{x:Static icons:Resources.page_copy}" />
                <MenuItem Command="{x:Static ApplicationCommands.Paste}" Icon="{x:Static icons:Resources.page_paste}" />
                <MenuItem Command="{x:Static ApplicationCommands.Delete}" Icon="{x:Static icons:Resources.delete}" />
                <Separator />
                <MenuItem Command="{x:Static ApplicationCommands.SelectAll}" />
            </ContextMenu>
            <!--Colors-->
            <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
            <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
            <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
            <!--End of Colors Section-->
            <!--Styles-->
            <Style x:Key="WinCopies.GUI.Controls.TextBoxStyle" TargetType="{x:Type local:TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                <Setter Property="LeftItems" Value="{Binding LeftItems}" />
                <Setter Property="RightItems" Value="{Binding RightItems}" />
            </Style>
            <Style x:Key="WinCopies.GUI.Controls.ButtonTextBoxStyle" TargetType="{x:Type local:ButtonTextBox}" BasedOn="{StaticResource WinCopies.GUI.Controls.TextBoxStyle}">
                <Setter Property="Buttons" Value="{Binding Buttons}" />
            </Style>
            <Style x:Key="WinCopies.GUI.Controls.PlaceholderTextBoxStyle" TargetType="{x:Type local:PlaceholderTextBox}" BasedOn="{StaticResource WinCopies.GUI.Controls.ButtonTextBoxStyle}">
                <Setter Property="PlaceholderStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                            <Setter Property="Foreground" Value="DimGray" />
                            <Setter Property="FontStyle" Value="Italic" />
                            <Setter Property="Text" Value="{Binding Placeholder}" />
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="PlaceholderMode" Value="{Binding PlaceholderMode}" />
            </Style>
            <!--End of Styles Section-->
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type local:TextBox}">
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TextBox}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <ItemsControl ItemsSource="{TemplateBinding LeftItems}" ItemContainerStyle="{TemplateBinding LeftItemsStyle}" ItemTemplateSelector="{TemplateBinding LeftItemsTemplateSelector}" HorizontalAlignment="Left">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                            <ScrollViewer x:Name="PART_ContentHost" Grid.Column="1" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                            <ItemsControl Grid.Column="2" ItemsSource="{TemplateBinding RightItems}" ItemContainerStyle="{TemplateBinding RightItemsStyle}" ItemTemplateSelector="{TemplateBinding RightItemsTemplateSelector}" HorizontalAlignment="Right">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Type local:TextBox}}" TargetType="{x:Type local:ButtonTextBox}">
        <Setter Property="RightItems" Value="{Binding Buttons, RelativeSource={RelativeSource Self}}" />
        <Setter Property="RightItemsTemplateSelector">
            <Setter.Value>
                <temp:InterfaceDataTemplateSelector />
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Type local:ButtonTextBox}}" TargetType="{x:Type local:PlaceholderTextBox}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding PlaceholderStyle, Converter={StaticResource IsNullConverter}, RelativeSource={RelativeSource Self}}" Value="false">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PlaceholderTextBox}">
                            <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <ItemsControl ItemsSource="{TemplateBinding LeftItems}" ItemContainerStyle="{TemplateBinding LeftItemsStyle}" ItemTemplateSelector="{TemplateBinding LeftItemsTemplateSelector}" HorizontalAlignment="Left">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                    <TextBox Grid.Column="1" IsReadOnly="True" IsReadOnlyCaretVisible="False" Style="{TemplateBinding PlaceholderStyle}" Focusable="False" Visibility="{TemplateBinding IsPlaceholderVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <TextBox.Template>
                                            <ControlTemplate TargetType="{x:Type TextBox}">
                                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                            </ControlTemplate>
                                        </TextBox.Template>
                                    </TextBox>
                                    <ScrollViewer x:Name="PART_ContentHost" Grid.Column="1" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                    <ItemsControl Grid.Column="2" ItemsSource="{TemplateBinding RightItems}" ItemContainerStyle="{TemplateBinding RightItemsStyle}" ItemTemplateSelector="{TemplateBinding RightItemsTemplateSelector}" HorizontalAlignment="Right">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:UpDownButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:UpDownButton}">
                    <StackPanel>
                        <Button FontFamily="Segoe UI" Command="{TemplateBinding UpCommand}" CommandParameter="{TemplateBinding UpCommandParameter}" CommandTarget="{TemplateBinding UpCommandTarget}">▲</Button>
                        <Button FontFamily="Segoe UI" Command="{TemplateBinding DownCommand}" CommandParameter="{TemplateBinding DownCommandParameter}" CommandTarget="{TemplateBinding DownCommandTarget}">▼</Button>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Type Label}}" TargetType="{x:Type local:Label}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Label}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="{TemplateBinding RecognizesAccessKey}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate DataType="{x:Type local:ITextBoxModel2}" x:Shared="false">
        <TextBox>
            <TextBox.Style>
                <util:MergedStyles>
                    <util:MergedStyles.Styles>
                        <x:Array Type="{x:Type Style}">
                            <StaticResource ResourceKey="WinCopies.GUI.Controls.TextBoxStyle" />
                            <StaticResource ResourceKey="TextBoxStyleTextOriented" />
                            <StaticResource ResourceKey="TextBoxStyleSelectionOriented" />
                            <StaticResource ResourceKey="TextBoxStyleTextEditingOriented" />
                            <StaticResource ResourceKey="{x:Type TextBox}" />
                        </x:Array>
                    </util:MergedStyles.Styles>
                </util:MergedStyles>
            </TextBox.Style>
        </TextBox>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:IButtonTextBoxModel2}" x:Shared="false">
        <TextBox>
            <TextBox.Style>
                <util:MergedStyles>
                    <util:MergedStyles.Styles>
                        <x:Array Type="{x:Type Style}">
                            <StaticResource ResourceKey="WinCopies.GUI.Controls.ButtonTextBoxStyle" />
                            <StaticResource ResourceKey="WinCopies.GUI.Controls.TextBoxStyle" />
                            <StaticResource ResourceKey="TextBoxStyleTextOriented" />
                            <StaticResource ResourceKey="TextBoxStyleSelectionOriented" />
                            <StaticResource ResourceKey="TextBoxStyleTextEditingOriented" />
                            <StaticResource ResourceKey="{x:Type TextBox}" />
                        </x:Array>
                    </util:MergedStyles.Styles>
                </util:MergedStyles>
            </TextBox.Style>
        </TextBox>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:IPlaceholderTextBoxModel2}" x:Shared="false">
        <TextBox>
            <TextBox.Style>
                <util:MergedStyles>
                    <util:MergedStyles.Styles>
                        <x:Array Type="{x:Type Style}">
                            <StaticResource ResourceKey="WinCopies.GUI.Controls.PlaceholderTextBoxStyle" />
                            <StaticResource ResourceKey="WinCopies.GUI.Controls.ButtonTextBoxStyle" />
                            <StaticResource ResourceKey="WinCopies.GUI.Controls.TextBoxStyle" />
                            <StaticResource ResourceKey="TextBoxStyleTextOriented" />
                            <StaticResource ResourceKey="TextBoxStyleSelectionOriented" />
                            <StaticResource ResourceKey="TextBoxStyleTextEditingOriented" />
                            <StaticResource ResourceKey="{x:Type TextBox}" />
                        </x:Array>
                    </util:MergedStyles.Styles>
                </util:MergedStyles>
            </TextBox.Style>
        </TextBox>
    </DataTemplate>

    <!--<Style TargetType="{x:Type local:InlineTextEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:InlineTextEditor}">
                    <StackPanel>
                        <local:Label RecognizesAccessKey="False" Content="{TemplateBinding Text}" />
                        <Button Command="{x:Static commands:Commands.CommonCommand}" Content="{x:Static icons:Resources.textfield_rename}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <DataTrigger Binding="{Binding IsEditing, RelativeSource={RelativeSource Self}}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <StackPanel>
                                <local:TextBox Text="{TemplateBinding Edit}" Command="{x:Static commands:DialogCommands.Apply}" />
                                -->
    <!--UpdateSourceTrigger=PropertyChanged-->
    <!--
                                <Button Content="{x:Static icons:Resources.accept}" Command="{x:Static commands:DialogCommands.Apply}" />
                                <Button Content="{x:Static icons:Resources.cancel}" Command="{x:Static commands:DialogCommands.Cancel}" />
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>-->

    <Style TargetType="{x:Type local:Link}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Link}">
                    <TextBlock>
                        <local:LinkRun Text="{TemplateBinding Content}" Uri="{TemplateBinding Uri}" UnderliningMode="{TemplateBinding UnderliningMode}" NormalForeground="{TemplateBinding NormalForeground}" HighlightedForeground="{TemplateBinding HighlightedForeground}" ActiveForeground="{TemplateBinding ActiveForeground}" SeenForeground="{TemplateBinding SeenForeground}" Seen="{TemplateBinding Seen}" Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}" CommandTarget="{TemplateBinding CommandTarget}" />
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style TargetType="{x:Type local:PropertyGrid}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                        <StackPanel>
                            <local:Label Content="{TemplateBinding Header1}" />
                            <local:Label Content="{TemplateBinding Header2}" />
                            <Image Source="{TemplateBinding Icon}" />
                            <DataGrid ItemsSource="{TemplateBinding Properties}">
                                <DataGrid.ColumnHeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </Style>
                                </DataGrid.ColumnHeaderStyle>
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding Name}" />
                                    <DataGridTemplateColumn>

                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
</ResourceDictionary>
