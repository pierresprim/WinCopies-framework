<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:localControls="clr-namespace:WinCopies.GUI.IO.Controls"
    xmlns:localObjectModel="clr-namespace:WinCopies.GUI.IO.ObjectModel"
    xmlns:localProcess="clr-namespace:WinCopies.GUI.IO.Process"
    xmlns:localProcessControls="clr-namespace:WinCopies.GUI.IO.Controls.Process"
    xmlns:controls="clr-namespace:WinCopies.GUI.Controls;assembly=WinCopies.GUI"
    xmlns:dotNetFix="clr-namespace:WinCopies.GUI.Controls.DotNetFix;assembly=WinCopies.GUI"
    xmlns:process="clr-namespace:WinCopies.IO.Process;assembly=WinCopies.IO"
    xmlns:icons="clr-namespace:WinCopies.GUI.Icons.Properties;assembly=WinCopies.GUI.Icons"
    xmlns:data="clr-namespace:WinCopies.Util.Data;assembly=WinCopies.Util.Desktop"
    xmlns:markup="clr-namespace:WinCopies.Markup;assembly=WinCopies.Util.Desktop"
    xmlns:propertySystem="clr-namespace:WinCopies.PropertySystem;assembly=WinCopies.Util.Desktop"
    xmlns:commands="clr-namespace:WinCopies.Commands;assembly=WinCopies.Util.Desktop"
    xmlns:util="clr-namespace:WinCopies;assembly=WinCopies.Util.Desktop"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:utilCommands="clr-namespace:WinCopies.Util.Commands.Primitives;assembly=WinCopies.Util"
    xmlns:i="clr-namespace:Microsoft.Xaml.Behaviors;assembly=Microsoft.Xaml.Behaviors"
    xmlns:temp="clr-namespace:WinCopies.Temp;assembly=WinCopies.Util.Temp">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/wincopies.gui;component/Themes/Generic.xaml" />
        <ResourceDictionary Source="pack://application:,,,/wincopies.gui.templates;component/Themes/Generic.xaml" />
        <ResourceDictionary>
            <!--Colors-->

            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181"/>
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7"/>
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB"/>
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626"/>
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959"/>
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7"/>
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB"/>

            <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>

            <!--Strings-->

            <!--<sys:String x:Key="WinCopies.Static.GUI.IO.Name">Name:</sys:String>
            <sys:String x:Key="WinCopies.Static.GUI.IO.Status">Status:</sys:String>
            <sys:String x:Key="WinCopies.Static.GUI.IO.TotalItemCount">Total item count:</sys:String>
            <sys:String x:Key="WinCopies.Static.GUI.IO.Remaining">Remaining:</sys:String>
            <sys:String x:Key="WinCopies.Static.GUI.IO.CopyingFrom">Copying from</sys:String>
            <sys:String x:Key="WinCopies.Static.GUI.IO.To">To</sys:String>-->

            <!--Data converters-->

            <data:MultiStringConverter x:Key="MultiStringConverter" />
            <data:IntComparisonConverter x:Key="IntComparisonConverter" />
            <propertySystem:PropertyArrayToListConverter x:Key="PropertyArrayToListConverter" />
            <propertySystem:ObjectToPropertyCollectionConverter x:Key="ObjectToPropertyCollectionConverter" />
            <data:EnumToArrayConverter x:Key="EnumToArrayConverter" />
            <data:ActionToDelegateCommand2Converter x:Key="ActionToDelegateCommand2Converter" />
            <data:ReverseBooleanConverter x:Key="ReverseBooleanConverter" />

            <!--String resources-->

            <sys:String x:Key="SourcePath">Source path:</sys:String>
            <sys:String x:Key="CurrentPath">Current path:</sys:String>
            <sys:String x:Key="Status">Status</sys:String>
            <sys:String x:Key="ActualRemainingSize">Actual remaining size:</sys:String>
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
                        <Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}" Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="RenderTransform" TargetName="ExpandPath">
                                <Setter.Value>
                                    <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}"/>
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}"/>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}"/>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style x:Key="WinCopies.GUI.IO.NavigationButtonItemContainerStyle" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource NavigationButtonItemContainerStyle}">
        <Setter Property="Header" Value="{Binding Path}" />
    </Style>

    <ControlTemplate x:Key="ExplorerControlTemplate" TargetType="{x:Type localControls:ExplorerControl}">
        <!--<DataTemplate DataType="{x:Type local:BrowsableObjectInfo}">-->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100" />
                <ColumnDefinition />
                <ColumnDefinition Width="100" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <ToolBarTray Grid.ColumnSpan="3">
                <ToolBar ItemsSource="{Binding Commands, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                    <ToolBar.ItemTemplateSelector>
                        <util:InterfaceDataTemplateSelector />
                    </ToolBar.ItemTemplateSelector>
                </ToolBar>
            </ToolBarTray>
            <Grid Grid.ColumnSpan="3" Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal">
                    <controls:NavigationButton ItemsSource="{Binding History, RelativeSource={RelativeSource TemplatedParent}}" ItemContainerStyle="{StaticResource WinCopies.GUI.IO.NavigationButtonItemContainerStyle}">
                        <controls:NavigationButton.GoBackButtonStyle>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Content" Value="{x:Static icons:Resources.resultset_previous}" />
                            </Style>
                        </controls:NavigationButton.GoBackButtonStyle>
                        <controls:NavigationButton.GoForwardButtonStyle>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Content" Value="{x:Static icons:Resources.resultset_next}" />
                            </Style>
                        </controls:NavigationButton.GoForwardButtonStyle>
                    </controls:NavigationButton>
                    <Button Content="{x:Static icons:Resources.arrow_up}" Command="{x:Static temp:Temp.BrowseToParent}" />
                </StackPanel>
                <dotNetFix:TextBox Grid.Column="1">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="Text" Value="{Binding Path, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}" Value="true">
                                    <Setter Property="Text" Value="{Binding Text, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </dotNetFix:TextBox>
                <Button Grid.Column="2" Command="{TemplateBinding GoButtonCommand}" CommandParameter="{TemplateBinding GoButtonCommandParameter}" CommandTarget="{Binding RelativeSource={RelativeSource Self}}" Content="{x:Static icons:Resources.accept}" />
            </Grid>
            <localControls:ExplorerControlTreeView Grid.Row="2" Style="{TemplateBinding TreeViewStyle}" />
            <localControls:ExplorerControlListView Grid.Column="1" Grid.Row="2" SelectedIndex="{Binding SelectedIndex, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" SelectedItem="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Style="{TemplateBinding ListViewStyle}" />
            <GridSplitter Grid.Column="1" Grid.Row="2" Width="5" HorizontalAlignment="Left" />
            <localControls:ExplorerControlPropertyGrid Grid.Column="2" Grid.Row="2" Item="{TemplateBinding PropertyGridItem}" Description="{TemplateBinding PropertyGridDescription}" />
            <GridSplitter Grid.Column="2" Grid.Row="2" Width="5" HorizontalAlignment="Left" />
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type localControls:ExplorerControl}">
        <Setter Property="Template" Value="{StaticResource ExplorerControlTemplate}" />
    </Style>

    <ControlTemplate x:Key="ExplorerControlPropertyGridTemplate" TargetType="{x:Type localControls:ExplorerControlPropertyGrid}">
        <controls:PropertyGrid Header1="{Binding Item.Name, RelativeSource={RelativeSource TemplatedParent}}" Header2="{TemplateBinding Description}">
            <controls:PropertyGrid.Properties>
                <MultiBinding Converter="{StaticResource PropertyArrayToListConverter}">
                    <Binding Path="Item.ObjectProperties" RelativeSource="{RelativeSource TemplatedParent}" Converter="{StaticResource ObjectToPropertyCollectionConverter}" />
                    <Binding Path="Item.ObjectPropertySystem" RelativeSource="{RelativeSource TemplatedParent}" />
                </MultiBinding>
            </controls:PropertyGrid.Properties>
        </controls:PropertyGrid>
    </ControlTemplate>

    <Style TargetType="{x:Type localControls:ExplorerControlPropertyGrid}">
        <Setter Property="Template" Value="{StaticResource ExplorerControlPropertyGridTemplate}" />
    </Style>

    <DataTemplate x:Key="TreeViewItemHeaderDataTemplate" DataType="{x:Type localObjectModel:IBrowsableObjectInfoViewModel}">
        <localControls:ExplorerControlTreeViewItemHeader>
            <localControls:ExplorerControlTreeViewItemHeader.Style>
                <Style TargetType="{x:Type localControls:ExplorerControlTreeViewItemHeader}" >
                    <Setter Property="Icon" Value="{Binding BitmapSources.SmallBitmapSource}" />
                    <Setter Property="ItemName" Value="{Binding LocalizedName}" />
                </Style>
            </localControls:ExplorerControlTreeViewItemHeader.Style>
        </localControls:ExplorerControlTreeViewItemHeader>
    </DataTemplate>

    <DataTemplate x:Key="ListViewItemContentDataTemplate" DataType="{x:Type localObjectModel:IBrowsableObjectInfoViewModel}">
        <localControls:ExplorerControlListViewItemContent>
            <localControls:ExplorerControlListViewItemContent.Style>
                <Style TargetType="{x:Type localControls:ExplorerControlListViewItemContent}" >
                    <Setter Property="SmallIcon" Value="{Binding BitmapSources.SmallBitmapSource}" />
                    <Setter Property="LargeIcon" Value="{Binding BitmapSources.LargeBitmapSource}" />
                    <Setter Property="ItemName" Value="{Binding LocalizedName}" />
                    <Setter Property="HasTransparency" Value="{Binding IsSpecialItem}" />
                    <Setter Property="IsCheckBoxVisible" Value="{Binding IsCheckBoxVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type localControls:ExplorerControl}}}" />
                </Style>
            </localControls:ExplorerControlListViewItemContent.Style>
        </localControls:ExplorerControlListViewItemContent>
    </DataTemplate>

    <Style TargetType="{x:Type localControls:ExplorerControlTreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type localControls:ExplorerControlTreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}" />
                        <Button Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}" CommandTarget="{TemplateBinding CommandTarget}" x:Name="Bd" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Button>
                        <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExplorerControlTreeViewItemStyle" TargetType="{x:Type localControls:ExplorerControlTreeViewItem}" BasedOn="{StaticResource {x:Type localControls:ExplorerControlTreeViewItem}}">
        <Setter Property="HeaderTemplate" Value="{StaticResource TreeViewItemHeaderDataTemplate}" />
        <Setter Property="ItemsSource" Value="{Binding Items}" />
        <Setter Property="IsSelected" Value="{Binding IsSelected}" />
        <Setter Property="Command" Value="{Binding DataContext.ItemClickCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type localControls:ExplorerControl}}}" />
        <Setter Property="CommandParameter" Value="{Binding}" />
    </Style>

    <Style x:Key="ExplorerControlTreeViewStyle" TargetType="{x:Type localControls:ExplorerControlTreeView}" BasedOn="{StaticResource {x:Type TreeView}}">
        <Setter Property="ItemsSource" Value="{Binding TreeViewItems}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ExplorerControlTreeViewItemStyle}" />
    </Style>

    <Style x:Key="ExplorerControlListViewItemStyle" TargetType="{x:Type localControls:ExplorerControlListViewItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
        <Setter Property="ContentTemplate" Value="{StaticResource ListViewItemContentDataTemplate}" />
        <Setter Property="IsSelected" Value="{Binding IsSelected}" />
        <Setter Property="Command" Value="{Binding DataContext.ItemClickCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type localControls:ExplorerControl}}}" />
        <Setter Property="CommandParameter" Value="{Binding}" />
    </Style>

    <Style x:Key="ExplorerControlListViewStyle" TargetType="{x:Type ListView}" BasedOn="{StaticResource {x:Type ListBox}}">
        <Setter Property="Margin" Value="5,0,0,0" />
        <Setter Property="ItemsSource" Value="{Binding Path.Items}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="SelectionMode" Value="{Binding SelectionMode}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ExplorerControlListViewItemStyle}" />
    </Style>

    <DataTemplate DataType="{x:Type localObjectModel:IExplorerControlBrowsableObjectInfoViewModel}">
        <localControls:ExplorerControl x:Name="ExplorerControl" Path="{Binding Path.Path}" Text="{Binding Text, Mode=TwoWay}"
                                       TreeViewStyle="{StaticResource ExplorerControlTreeViewStyle}" ListViewStyle="{StaticResource ExplorerControlListViewStyle}"
                                       Commands="{Binding CommonCommands}"
                                       History="{Binding History}" GoButtonCommand="{x:Static localObjectModel:ExplorerControlBrowsableObjectInfoViewModel.GoCommand}" GoButtonCommandParameter="{Binding}"
                                       IsCheckBoxVisible="{Binding IsCheckBoxVisible}"
                                       SelectedIndex="{Binding Path.SelectedIndex, Mode=TwoWay}" SelectedItem="{Binding Path.SelectedItem, Mode=TwoWay}"
                                       PropertyGridItem="{Binding Path}" PropertyGridDescription="{Binding Path.Items.Count, StringFormat={}{0} items}"
                                       BrowseToParent="{Binding BrowseToParent}">
            <data:PushBindingManager.PushBindings>
                <data:PushBinding TargetProperty="SelectedItems" Path="SelectedItems" />
            </data:PushBindingManager.PushBindings>
        </localControls:ExplorerControl>
        <DataTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SelectedItems.Count}" Value="1" />
                    <Condition Binding="{Binding Path.SelectedItem, Converter={StaticResource IsNullConverter}}" Value="{markup:FalseValue}" />
                </MultiDataTrigger.Conditions>
                <Setter Property="PropertyGridItem" TargetName="ExplorerControl" Value="{Binding Path.SelectedItem}" />
                <Setter Property="PropertyGridDescription" TargetName="ExplorerControl" Value="{Binding Path.Items.Count, StringFormat={}{0} items; 1 item selected}" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding SelectedItems.Count, Converter={StaticResource IntComparisonConverter}, ConverterParameter={data:IntComparsionConverterParameter Parameter=1, ExpectedComparisonResult=Greater}}" Value="{markup:TrueValue}">
                <Setter Property="PropertyGridItem" TargetName="ExplorerControl" Value="{x:Null}" />
                <Setter Property="PropertyGridDescription" TargetName="ExplorerControl">
                    <Setter.Value>
                        <MultiBinding StringFormat="{}{0} items; {1} items selected">
                            <Binding Path="Path.Items.Count" />
                            <Binding Path="SelectedItems.Count" />
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style TargetType="{x:Type localControls:ExplorerControlTreeViewItemHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type localControls:ExplorerControlTreeViewItemHeader}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Image Source="{TemplateBinding Icon}" />
                        <controls:Label Grid.Column="1" Content="{TemplateBinding ItemName}" Foreground="{TemplateBinding Foreground}" RecognizesAccessKey="False" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- todo: merged style to avoid the ancestor reference in binding?-->
    <Style x:Key="ExplorerControlListViewItemTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Text" Value="{Binding ItemName, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="ToolTip" Value="{Binding ItemName, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
    </Style>

    <Style x:Key="ExplorerControlImageStyle" TargetType="Image">
        <!--<Setter Property="Opacity">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource FileSystemInfoAttributesToOpacityConverter}" >
                    <Binding Path="FileAttributes" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                    <Binding Path="FileAttributesToShow" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                </MultiBinding>
            </Setter.Value>
        </Setter>-->

        <Style.Triggers>
            <DataTrigger Binding="{Binding HasTransparency}">
                <Setter Property="Opacity" Value="0.5" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="ExplorerControlSizeThreeListViewItemContentTemplate" TargetType="{x:Type localControls:ExplorerControlListViewItemContent}">
        <Grid Width="100">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="96" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <CheckBox Visibility="{Binding IsCheckBoxVisible, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" IsChecked="{Binding IsSelected}" />
            <Image Grid.Row="1" Source="{Binding LargeIcon, RelativeSource={RelativeSource Mode=TemplatedParent}}" VerticalAlignment="Bottom" Style="{StaticResource ExplorerControlImageStyle}" />
            <!--, Converter={local:ImageSourceConverter}}-->
            <TextBlock Grid.Row="2" TextWrapping="Wrap" TextAlignment="Center" Height="32" Style="{StaticResource ExplorerControlListViewItemTextBlockStyle}" />
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type localControls:ExplorerControlListViewItemContent}">
        <Setter Property="Template" Value="{StaticResource ExplorerControlSizeThreeListViewItemContentTemplate}" />
    </Style>

    <!--Processes-->

    <ControlTemplate x:Key="ProcessErrorItemTemplate" TargetType="{x:Type localProcessControls:ProcessErrorItemControl}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <!--<Image Source="{TemplateBinding Icon}" />-->

            <StackPanel Grid.Column="1">
                <TextBlock Text="{TemplateBinding Path}" Visibility="{Binding Text, RelativeSource={RelativeSource Self}, Converter={localProcess:ObjectToVisibilityConverter}}" />
                <TextBlock Text="{TemplateBinding ErrorMessage}" />
                <StackPanel Orientation="Horizontal">
                    <Button Content="Try again" Command="{x:Static commands:ProcessCommands.TryAgain}" />
                    <Button Content="Ignore" Command="{x:Static commands:ProcessCommands.Ignore}" />
                    <Button Content="Cancel" Command="{Binding Actions.Cancel, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource ActionToDelegateCommand2Converter}}" />
                </StackPanel>
                <ItemsControl ItemsSource="{Binding CustomActions, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type utilCommands:ICommand}">
                            <Button Content="{Binding Name}" ToolTip="{Binding Description}" Command="{x:Static commands:Commands.CommonCommand}" CommandParameter="{Binding}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <CheckBox IsChecked="{Binding ApplyToAll, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}">Apply to all</CheckBox>
            </StackPanel>
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type localProcessControls:ProcessErrorItemControl}">
        <Setter Property="Template" Value="{StaticResource ProcessErrorItemTemplate}" />
    </Style>

    <ControlTemplate x:Key="ProcessTemplate" TargetType="{x:Type localProcessControls:ProcessControl}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <!--<TextBlock Text="{Binding Description, RelativeSource={RelativeSource Mode=TemplatedParent}}" />-->
                <StackPanel Grid.Row="1" Orientation="Horizontal">
                    <Button x:Name="PART_Run_PauseButton" Content="{x:Static icons:Resources.control_pause}" Command="{x:Static commands:Commands.CommonCommand}" CommandParameter="{Binding Actions.Pause, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                    <Button Content="{x:Static icons:Resources.cancel}" Command="{x:Static commands:Commands.CommonCommand}" CommandParameter="{Binding Actions.Cancel, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                </StackPanel>
                <ProgressBar x:Name="PART_ProgressBar" Grid.Row="2" Value="{Binding ProgressPercentage, RelativeSource={RelativeSource Mode=TemplatedParent}}" Maximum="100" Height="30" IsIndeterminate="{Binding Status, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static process:ProcessStatus.Loading}}" />
            </Grid>

            <Control Grid.Row="1">
                <Control.Style>
                    <Style TargetType="{x:Type Control}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto" />
                                            <RowDefinition Height="auto" />
                                            <RowDefinition Height="auto" />
                                            <RowDefinition Height="auto" />
                                        </Grid.RowDefinitions>

                                        <Label Content="{StaticResource SourcePath}" />
                                        <Label Grid.Column="1" Content="{Binding SourcePath, Mode=OneTime, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type localProcessControls:ProcessControl}}}" />

                                        <Label Grid.Row="1" Content="{StaticResource Status}" />
                                        <Label Grid.Column="1" Grid.Row="1" Content="{Binding Status, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type localProcessControls:ProcessControl}}}" />

                                        <Label Grid.Row="2" Content="{StaticResource CurrentPath}" />
                                        <controls:Label Grid.Column="1" Grid.Row="2" RecognizesAccessKey="False">
                                            <controls:Label.Content>
                                                <MultiBinding Converter="{StaticResource MultiStringConverter}" ConverterParameter="{}{0} ({1} %)">
                                                    <Binding Path="CurrentPath" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type localProcessControls:ProcessControl}}" />
                                                    <Binding Path="CurrentPathProgressPercentage" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type localProcessControls:ProcessControl}}" />
                                                </MultiBinding>
                                            </controls:Label.Content>
                                        </controls:Label>

                                        <Label Grid.Row="3" Content="{StaticResource ActualRemainingSize}" />
                                        <Label Grid.Column="1" Grid.Row="3" Content="{Binding ActualRemainingSize, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type localProcessControls:ProcessControl}}}" />
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ErrorPaths, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type localProcessControls:ProcessControl}}, Converter={StaticResource IsNullConverter}}" Value="{markup:FalseValue}" />
                                    <Condition Binding="{Binding ErrorPaths.HasItems, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type localProcessControls:ProcessControl}}}" Value="{markup:TrueValue}" />
                                    <Condition Binding="{Binding Status, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type localProcessControls:ProcessControl}}}" Value="{x:Static process:ProcessStatus.Error}" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <localProcessControls:ProcessErrorItemControl DataContext="{Binding ErrorPaths, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type localProcessControls:ProcessControl}}, Converter={data:SimpleLinkedListConverter}}" Path="{Binding Item.Path}" ErrorMessage="{Binding Error.ErrorMessage}" Actions="{Binding Actions, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type localProcessControls:ProcessControl}}}" CustomActions="{Binding CustomActions, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type localProcessControls:ProcessControl}}}" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ErrorPaths, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type localProcessControls:ProcessControl}}, Converter={localProcess:ErrorPathsToBooleanConverter}}" Value="{markup:FalseValue}" />
                                    <Condition Binding="{Binding Status, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type localProcessControls:ProcessControl}}}" Value="{x:Static process:ProcessStatus.Error}" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <localProcessControls:ProcessErrorItemControl ErrorMessage="{Binding Error.ErrorMessage, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type localProcessControls:ProcessControl}}}" Actions="{Binding Actions, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type localProcessControls:ProcessControl}}}" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Control.Style>
            </Control>
        </Grid>
        <!--<ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Status, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Static localProcessControls:ProcessStatus.None}">
                <Setter Property="Content" TargetName="PART_Run_PauseButton" Value="{x:Static icons:Resources.control_play}" />
                <Setter Property="Command" TargetName="PART_Run_PauseButton" Value="{x:Static commands:Commands.CommonCommand}" />
                <Setter Property="CommandParameter" TargetName="PART_Run_PauseButton" Value="{TemplateBinding RunAction}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Status, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="{x:Static localProcessControls:ProcessStatus.InProgress}">
                <Setter Property="IsIndeterminate" TargetName="PART_ProgressBar" Value="False" />
                <Setter Property="Value" TargetName="PART_ProgressBar" Value="{Binding ProgressPercentage, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>-->
    </ControlTemplate>

    <Style TargetType="{x:Type localProcessControls:ProcessControl}">
        <Setter Property="Template" Value="{StaticResource ProcessTemplate}" />
    </Style>

    <DataTemplate DataType="{x:Type localProcess:IProcess}">
        <localProcessControls:ProcessControl SourcePath="{Binding SourcePath.Path}"
                                             ArePathsLoaded="{Binding ArePathsLoaded}"
                                             CurrentPath="{Binding CurrentPath.Path}"
                                             CurrentPathProgressPercentage="{Binding CurrentPathProgressPercentage}"
                                             ProgressPercentage="{Binding ProgressPercentage}"
                                             Status="{Binding Status}"
                                             ActualRemainingSize="{Binding ActualRemainingSize}"
                                             Error="{Binding Error}"
                                             ErrorPaths="{Binding ErrorPaths}"
                                             Actions="{Binding ProcessActions}"
                                             CustomActions="{Binding Actions}" />
    </DataTemplate>



    <ControlTemplate x:Key="ProcessManagerControlTemplate" TargetType="{x:Type localProcessControls:ProcessManagerControl}">
        <DockPanel Background="White">
            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" VerticalAlignment="Center">
                <CheckBox IsChecked="{Binding ClearCompletedProcessesAutomatically, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="0,0,10,0">Clear completed processes automatically</CheckBox>
                <Button Command="{TemplateBinding ClearCompletedProcesses}">Clear all completed processes</Button>
            </StackPanel>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="300" />
                </Grid.RowDefinitions>
                <ListView ItemsSource="{TemplateBinding Processes}" SelectedItem="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}}">
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Type" DisplayMemberBinding="{Binding Name}" />
                            <GridViewColumn Header="Source Path" DisplayMemberBinding="{Binding SourcePath, Converter={localProcess:PathCommonToStringConverter}}" />
                            <GridViewColumn Header="Status" DisplayMemberBinding="{Binding Status, Converter={data:ToStringConverter}}" />
                            <GridViewColumn Header="Progress">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate DataType="{x:Type localProcess:IProcess}">
                                        <ProgressBar x:Name="PART_ProgressBar" Value="{Binding ProgressPercentage, Mode=OneWay}" Maximum="100" Height="30" Width="100" />
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Status, Mode=OneWay}" Value="{x:Static process:ProcessStatus.Loading}">
                                                <Setter Property="IsIndeterminate" TargetName="PART_ProgressBar" Value="true" />
                                                <!--<Setter Property="Value" TargetName="PART_ProgressBar" Value="{Binding ProgressPercentage}" />-->
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>

                <GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Top" ResizeDirection="Rows" />
                <ContentControl Grid.Row="1" Content="{TemplateBinding SelectedItem}" Margin="0,5,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <ContentControl.ContentTemplateSelector>
                        <util:InterfaceDataTemplateSelector />
                    </ContentControl.ContentTemplateSelector>
                </ContentControl>
            </Grid>
        </DockPanel>
    </ControlTemplate>

    <Style TargetType="{x:Type localProcessControls:ProcessManagerControl}">
        <Setter Property="Template" Value="{StaticResource ProcessManagerControlTemplate}" />
    </Style>

    <DataTemplate DataType="{x:Type localProcess:IProcessManager}">
        <localProcessControls:ProcessManagerControl Processes="{Binding Processes, Mode=TwoWay}" SelectedItem="{Binding SelectedItem, Mode=TwoWay}" ClearCompletedProcessesAutomatically="{Binding ClearCompletedProcessesAutomatically, Mode=TwoWay}" ClearCompletedProcesses="{Binding ClearCompletedProcesses}" />
    </DataTemplate>
</ResourceDictionary>
