<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WinCopies.Util</name>
    </assembly>
    <members>
        <member name="T:WinCopies.Util.BackgroundWorker">
            <summary>
            <para>FR: Représente un BackgroundWorker qui s'exécute par défaut dans un thread MTA et qui arrête automatiquement l'exécution en arrière-plan lors d'un rapport du progrès.</para>
            <para>EN: Represents a BackgroundWorker that runs in a MTA thread by default and automatically stops on background when reports progress.</para>
            </summary>
        </member>
        <member name="E:WinCopies.Util.BackgroundWorker.DoWork">
            <summary>
            <para>FR: Cet evènement se produit lorsque le thread d'arrière plan démarre. Placez votre code de traitement ici.</para>
            <para>Gestionnaire d'événement exécuté dans le thread d'arrière plan.</para>
            <para>EN: This event is called when the background thread starts. Put your background working code here.</para>
            <para>The event handler is running in the background thread.</para>
            </summary>
        </member>
        <member name="E:WinCopies.Util.BackgroundWorker.ProgressChanged">
            <summary>
            <para>FR: Cet évènement se produit lorsque le thread d'arrière plan notifie de la progression.</para>
            <para>Gestionnaire d'événement exécuté dans le thread principal.</para>
            <para>EN: This event is called when the background thread reports progress.</para>
            <para>The event handler is running in the main thread.</para>
            </summary>
        </member>
        <member name="E:WinCopies.Util.BackgroundWorker.RunWorkerCompleted">
            <summary>
            <para>FR: Cet évènement se produit lorsque le thread d'arrière plan est terminé.</para>
            <para>Gestionnaire d'événement exécuté dans le thread d'arrière plan.</para>
            <para>EN: This event is called when the background thread has finished working.</para>
            <para>The event handler is running in the background thread.</para>
            </summary>
        </member>
        <member name="P:WinCopies.Util.BackgroundWorker.IsCancelled">
            <summary>
            <para>FR: Obtient une valeur indiquant si le traitement a été annulé.</para>
            <para>EN: Gets a value that indicates if the working is cancelled.</para>
            </summary>
        </member>
        <member name="P:WinCopies.Util.BackgroundWorker.CancellationPending">
            <summary>
            <para>FR: Obtient une valeur indiquant si le thread doit essayer de se terminer avant la fin de ses tâches en arrière-plan.</para>
            <para>EN: Gets a value that indicates if the thread must try to cancel before finished the background tasks.</para>
            </summary>
        </member>
        <member name="P:WinCopies.Util.BackgroundWorker.IsBusy">
            <summary>
            <para>FR: Obtient une valeur indiquant si le thread est occupé.</para>
            <para>EN: Gets a value that indicates if the thread is busy.</para>
            </summary>
        </member>
        <member name="P:WinCopies.Util.BackgroundWorker.WorkerReportsProgress">
            <summary>
            <para>FR: Obtient ou définit une valeur indiquant si le thread peut notifier de l'avancement.</para>
            <para>EN: Gets or sets a value that indicates if the thread can notify of the progress.</para>
            </summary>
        </member>
        <member name="P:WinCopies.Util.BackgroundWorker.WorkerSupportsCancellation">
            <summary>
            <para>FR: Obtient ou définit une valeur indiquant si le thread supporte l'annulation.</para>
            <para>EN: Gets or sets a value that indicates if the thread supports the cancellation.</para>
            </summary>
        </member>
        <member name="P:WinCopies.Util.BackgroundWorker.Progress">
            <summary>
            <para>FR: Obtient le progrès actuel du traitement en pourcents.</para>
            <para>EN: Gets the current progress of the working in percent.</para>
            </summary>
        </member>
        <member name="P:WinCopies.Util.BackgroundWorker.ApartmentState">
            <summary>
            <para>FR: Obtient l'<see cref="T:System.Threading.ApartmentState"/> de ce thread.</para>
            <para>EN: Gets the <see cref="T:System.Threading.ApartmentState"/> of this thread.</para>
            </summary>
        </member>
        <member name="M:WinCopies.Util.BackgroundWorker.#ctor">
            <summary>
            <para>FR: Construit un <see cref="T:WinCopies.Util.BackgroundWorker"/>.</para>
            <para>EN: Initializes a new instance of the <see cref="T:WinCopies.Util.BackgroundWorker"/> class.</para>
            </summary>
        </member>
        <member name="M:WinCopies.Util.BackgroundWorker.#ctor(System.Threading.ApartmentState)">
            <summary>
            <para>FR: Construit un <see cref="T:WinCopies.Util.BackgroundWorker"/> avec un <see cref="T:System.Threading.ApartmentState"/> donné.</para>
            <para>EN: Initializes a new instance of the <see cref="T:WinCopies.Util.BackgroundWorker"/> class with a given <see cref="T:System.Threading.ApartmentState"/>.</para>
            </summary>
            <param name="apartmentState">
            <para>FR: <see cref="T:System.Threading.ApartmentState"/> dans lequel initialiser le thread.</para>
            <para>EN: <see cref="T:System.Threading.ApartmentState"/> in which initialize the thread.</para>
            </param>
        </member>
        <member name="M:WinCopies.Util.BackgroundWorker.Reset(System.Boolean)">
            <summary>
            <para>FR: Ré-initialise les variables locales.</para>
            <para>EN: Re-initializes the local variables.</para>
            </summary>
        </member>
        <member name="M:WinCopies.Util.BackgroundWorker.RunWorkerAsync">
            <summary>
            <para>FR: Démarre le traitement.</para>
            <para>EN: Starts the working.</para>
            </summary>
        </member>
        <member name="M:WinCopies.Util.BackgroundWorker.RunWorkerAsync(System.Object)">
            <summary>
            <para>FR: Démarre le traitement avec un argument personnalisé.</para>
            <para>EN: Starts the working with a custom parameter.</para>
            </summary>
            <param name="argument">
            <para>FR: Argument passé au traitement.</para>
            <para>EN: Argument given for the working.</para>
            </param>
        </member>
        <member name="M:WinCopies.Util.BackgroundWorker.ThreadStart(System.ComponentModel.DoWorkEventArgs)">
            <summary>
            <para>FR: Point d'entré du thread.</para>
            <para>EN: Entry point of the thread.</para>
            </summary>
        </member>
        <member name="M:WinCopies.Util.BackgroundWorker.ThreadCompleted(System.Object)">
            <summary>
            <para>FR: Cette méthode est appelée lorsque le thread est terminé.</para>
            <para>EN: This method is called when the thread has finished.</para>
            </summary>
        </member>
        <member name="M:WinCopies.Util.BackgroundWorker.CancelAsync">
            <summary>
            <para>FR: Annule le traitement en cours de manière asynchrone.</para>
            <para>EN: Cancels the working asynchronously.</para>
            </summary>
        </member>
        <member name="M:WinCopies.Util.BackgroundWorker.Cancel">
            <summary>
            <para>FR: Annule le traitement en cours.</para>
            <para>EN: Cancels the working.</para>
            </summary>
        </member>
        <member name="M:WinCopies.Util.BackgroundWorker.OnProgressChanged(System.Object)">
            <summary>
            <para>FR: Délégué pour rapporter de la progression.</para>
            <para>EN: Delegate for progress reportting.</para>
            </summary>
            <param name="args">
            <para>FR: Argument de l'évènement.</para>
            <para>EN: Event argument.</para>
            </param>
        </member>
        <member name="M:WinCopies.Util.BackgroundWorker.ReportProgress(System.Int32)">
            <summary>
            <para>FR: Notifie de la progession.</para>
            <para>EN: Notifies of the progress.</para>
            </summary>
            <param name="percentProgress">
            <para>FR: Pourcentage de progression.</para>
            <para>EN: Progress percentage.</para>
            </param>
        </member>
        <member name="M:WinCopies.Util.BackgroundWorker.ReportProgress(System.Int32,System.Object)">
            <summary>
            <para>FR: Notifie de la pogression.</para>
            <para>EN: Notifies of the progress.</para>
            </summary>
            <param name="percentProgress">
            <para>FR: Pourcentage de progression.</para>
            <para>EN: Progress percentage.</para>
            </param>
            <param name="userState">
            <para>FR: Objet utilisateur.</para>
            <para>EN: User object.</para>
            </param>
        </member>
        <member name="T:WinCopies.Util.ICheckableObject">
            <summary>
            Provides an object that defines a value that can be checked and notifies of the checked status or value change. For example, this interface can be used in a view for items that can be selected.
            </summary>
        </member>
        <member name="T:WinCopies.Util.CheckableObject">
            <summary>
            Provides an object that defines a value that can be checked and notifies of the checked status or value change. For example, this class can be used in a view for items that can be selected.
            </summary>
        </member>
        <member name="P:WinCopies.Util.CheckableObject.IsChecked">
            <summary>
            Gets or sets a value that indicates whether the object is checked.
            </summary>
        </member>
        <member name="T:WinCopies.Util.CheckableObject`1">
            <summary>
            Provides an object that defines a generic value that can be checked and notifies of the checked status or value change. For example, this class can be used in a view for items that can be selected.
            </summary>
            <typeparam name="T">The type of the value of this object.</typeparam>
        </member>
        <member name="T:WinCopies.Util.Commands.FileSystemCommands">
            <summary>
            Provides some standard commands for file system gesture.
            </summary>
        </member>
        <member name="P:WinCopies.Util.Commands.FileSystemCommands.NewFolder">
            <summary>
            Gets a value that represents the new folder command.
            </summary>
        </member>
        <member name="P:WinCopies.Util.Commands.FileSystemCommands.NewArchive">
            <summary>
            Gets a value that represents the new archive command.
            </summary>
        </member>
        <member name="P:WinCopies.Util.Commands.FileSystemCommands.ShowFileProperties">
            <summary>
            Gets a value that represents the show file properties command.
            </summary>
        </member>
        <member name="T:WinCopies.Util.Commands.NavigationAndWindowCommands">
            <summary>
            Provides some standard commands for navigation inside windows.
            </summary>
        </member>
        <member name="P:WinCopies.Util.Commands.NavigationAndWindowCommands.NewTab">
            <summary>
            Gets a value that represents the new tab command.
            </summary>
        </member>
        <member name="P:WinCopies.Util.Commands.NavigationAndWindowCommands.NewWindow">
            <summary>
            Gets a value that represents the new window command.
            </summary>
        </member>
        <member name="P:WinCopies.Util.Commands.NavigationAndWindowCommands.NewWindowInNewInstance">
            <summary>
            Gets a value that represents the new window in new instance command.
            </summary>
        </member>
        <member name="P:WinCopies.Util.Commands.NavigationAndWindowCommands.CloseTab">
            <summary>
            Gets a value that represents the close tab command.
            </summary>
        </member>
        <member name="P:WinCopies.Util.Commands.NavigationAndWindowCommands.CloseAllTabs">
            <summary>
            Gets a value that represents the close all tabs command.
            </summary>
        </member>
        <member name="P:WinCopies.Util.Commands.NavigationAndWindowCommands.CloseWindow">
            <summary>
            Gets a value that represents the close window command.
            </summary>
        </member>
        <member name="T:WinCopies.Util.DataConverters.BooleanToVisibilityConverter">
            <summary>
            Provides a converter for conversion from a <see langword="bool"/> value to a <see cref="T:System.Windows.Visibility"/> value.
            </summary>
        </member>
        <member name="M:WinCopies.Util.DataConverters.BooleanToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a <see langword="bool"/> value to a <see cref="T:System.Windows.Visibility"/> value. If the value is <see langword="true"/>, the returned value will be the <see cref="F:System.Windows.Visibility.Visible"/> value, if not and if parameter is not null, it will be the value of the parameter, otherwise it will be <see cref="F:System.Windows.Visibility.Collapsed"/>.
            </summary>
            <param name="value">The <see langword="bool"/> value to convert.</param>
            <param name="targetType">The target type of the value. This parameter isn't evaluated in this converter.</param>
            <param name="parameter">The value to return if the value to convert is false. This parameter can't be the <see cref="F:System.Windows.Visibility.Visible"/> value. This parameter can be null.</param>
            <param name="culture">The culture used for the conversion. This parameter isn't evaluated in this converter.</param>
            <returns><see cref="F:System.Windows.Visibility.Visible"/> if the value to convert is <see langword="true"/>, if not, the value of the parameter if it is not null, otherwise <see cref="F:System.Windows.Visibility.Collapsed"/>.</returns>
        </member>
        <member name="M:WinCopies.Util.DataConverters.BooleanToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a <see cref="T:System.Windows.Visibility"/> value to a <see langword="bool"/> value. If the value is <see cref="F:System.Windows.Visibility.Visible"/>, the returned value will be <see langword="true"/>, otherwise false.
            </summary>
            <param name="value">The <see cref="T:System.Windows.Visibility"/> value to convert.</param>
            <param name="targetType">The target type of the value. This parameter isn't evaluated in this converter.</param>
            <param name="parameter">The parameter of this converter. This parameter isn't evaluated in this converter.</param>
            <param name="culture">The culture used for the conversion. This parameter isn't evaluated in this converter.</param>
            <returns><see langword="true"/> if the value to convert is <see cref="F:System.Windows.Visibility.Visible"/>, otherwise false.</returns>
        </member>
        <member name="T:WinCopies.Util.DataConverters.ConverterBase">
            <summary>
            Provides a base-class for any data <see cref="T:System.Windows.Data.Binding"/> converter and can be directly use in an XAML view. This class can be used as a singleton class.
            </summary>
        </member>
        <member name="M:WinCopies.Util.DataConverters.ConverterBase.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns <see langword="null"/>, the valid null value is used.</returns>
        </member>
        <member name="M:WinCopies.Util.DataConverters.ConverterBase.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns <see langword="null"/>, the valid null value is used.</returns>
        </member>
        <member name="T:WinCopies.Util.DataConverters.EnumToBooleanConverter">
            <summary>
            Data converter for checking wheter an enum equals a parameter.
            </summary>
            <remarks>This class can also work for numeric types (int, ...)</remarks>
        </member>
        <member name="M:WinCopies.Util.DataConverters.EnumToBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Checks if an enum value equals a parameter.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property. This type must be <see cref="T:System.Boolean"/>.</param>
            <param name="parameter">The converter parameter to use. This represents the value to compare with the value.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns></returns>
        </member>
        <member name="T:WinCopies.Util.DataConverters.MultiConverterBase">
            <summary>
            Provides a base-class for any data-<see cref="T:System.Windows.Data.MultiBinding"/> converter and can be directly use in an XAML view. This class can be used as a singleton class.
            </summary>
        </member>
        <member name="M:WinCopies.Util.DataConverters.MultiConverterBase.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts source values to a value for the binding target. The data binding engine calls this method when it propagates the values from source bindings to the binding target.
            </summary>
            <param name="values">The array of values that the source bindings in the <see cref="T:System.Windows.Data.MultiBinding"/> produces. The value <see cref="F:System.Windows.DependencyProperty.UnsetValue"/> indicates that the source binding has no value to provide for conversion.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:WinCopies.Util.DataConverters.MultiConverterBase.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a binding target value to the source binding values.
            </summary>
            <param name="value">The value that the binding target produces.</param>
            <param name="targetTypes">The array of types to convert to. The array length indicates the number and types of values that are suggested for the method to return.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>An array of values that have been converted from the target value back to the source values.</returns>
        </member>
        <member name="T:WinCopies.Util.Extensions">
            <summary>
            Provides some static extensions methods.
            </summary>
        </member>
        <member name="M:WinCopies.Util.Extensions.Append(System.Array,System.Array[])">
            <summary>
            Appends data to the table. The item type is not checked. Arrays must have only a dimension.
            </summary>
            <param name="array">The source table.</param>
            <param name="arrays">The tables to concatenate.</param>
            <returns></returns>
        </member>
        <member name="M:WinCopies.Util.Extensions.AppendLong(System.Array,System.Array[])">
            <summary>
            Appends data to the table using the <see cref="P:System.Array.LongLength"/> length property. The item type is not checked. Arrays must have only a dimension.
            </summary>
            <param name="array">The source table.</param>
            <param name="arrays">The tables to concatenate.</param>
            <returns></returns>
        </member>
        <member name="M:WinCopies.Util.Extensions.Sort``1(System.Collections.ObjectModel.ObservableCollection{``0})">
            <summary>
            Sort an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/>.
            </summary>
            <typeparam name="T">The type of the values in the <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/>.</typeparam>
            <param name="oc">The <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> to sort.</param>
        </member>
        <member name="M:WinCopies.Util.Extensions.Sort``1(System.Collections.ObjectModel.ObservableCollection{``0},System.Collections.Generic.IComparer{``0})">
            <summary>
            Sort an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> with a user-defined comparer.
            </summary>
            <typeparam name="T">The type of the values in the <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/>.</typeparam>
            <param name="oc">The <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> to sort.</param>
            <param name="comparer">An <see cref="T:System.Collections.Generic.IComparer`1"/> providing comparison for sorting the <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/>.</param>
        </member>
        <member name="M:WinCopies.Util.Extensions.RemoveRange(System.Collections.IList,System.Int32,System.Int32)">
            <summary>
            Removes multiple items in an <see cref="T:System.Collections.IList"/> collection, from a start index to a given length.
            </summary>
            <param name="collection">The collection from which remove the items.</param>
            <param name="start">The start index in the collection from which delete the items.</param>
            <param name="length">The length to remove.</param>
        </member>
        <member name="M:WinCopies.Util.Extensions.TryExecute(System.Windows.Input.ICommand,System.Object)">
            <summary>
            Check if the command can be executed, and executes it if available. See the remarks section.
            </summary>
            <param name="command">The command to execute.</param>
            <param name="commandParameter">The parameter of your command.</param>
            <remarks>
            This method only evaluates the commands of the common <see cref="T:System.Windows.Input.ICommand"/> type. To evaluate a command of the <see cref="T:System.Windows.Input.RoutedCommand"/> type, consider using the <see cref="M:WinCopies.Util.Extensions.TryExecute(System.Windows.Input.RoutedCommand,System.Object,System.Windows.IInputElement)"/> method. If you are not sure of the type of your command, so consider using the <see cref="!:ExecuteCommand(ICommandSource, ICommand, object, IInputElement)"/> method.
            </remarks>
        </member>
        <member name="M:WinCopies.Util.Extensions.GetParent(System.Windows.DependencyObject,System.Type,System.Boolean)">
            <summary>
            Searches for the first parent of an object which is assignable from a given type.
            </summary>
            <param name="source">The source object</param>
            <param name="type">The type to search</param>
            <param name="typeEquality">Indicates whether to check for the exact type equality. <see langword="true"/> to only search for objects with same type than the given type, <see langword="false"/> to search for all objects of type for which the given type is assignable from.</param>
            <returns>The first object that was found, if any, otherwise null.</returns>
        </member>
        <member name="T:WinCopies.Util.Generic">
            <summary>
            Generic
            </summary>
        </member>
        <member name="P:WinCopies.Util.Generic.NewTab">
            <summary>
            Gets the NewTab resource.
            </summary>
        </member>
        <member name="P:WinCopies.Util.Generic.NewWindow">
            <summary>
            Gets the NewWindow resource.
            </summary>
        </member>
        <member name="P:WinCopies.Util.Generic.NewWindowInNewInstance">
            <summary>
            Gets the NewWindowInNewInstance resource.
            </summary>
        </member>
        <member name="P:WinCopies.Util.Generic.CloseTab">
            <summary>
            Gets the CloseTab resource.
            </summary>
        </member>
        <member name="P:WinCopies.Util.Generic.CloseAllTabs">
            <summary>
            Gets the CloseAllTabs resource.
            </summary>
        </member>
        <member name="P:WinCopies.Util.Generic.CloseWindow">
            <summary>
            Gets the CloseWindow resource.
            </summary>
        </member>
        <member name="P:WinCopies.Util.Generic.NewFolder">
            <summary>
            Gets the NewFolder resource.
            </summary>
        </member>
        <member name="P:WinCopies.Util.Generic.NewArchive">
            <summary>
            Gets the NewArchive resource.
            </summary>
        </member>
        <member name="P:WinCopies.Util.Generic.ShowFileProperties">
            <summary>
            Gets the ShowFileProperties resource.
            </summary>
        </member>
        <member name="P:WinCopies.Util.Generic.Rename">
            <summary>
            Gets the Rename resource.
            </summary>
        </member>
        <member name="P:WinCopies.Util.Generic.DeclaringTypesNotCorrespond">
            <summary>
            Gets the DeclaringTypesNotCorrespond resource.
            </summary>
        </member>
        <member name="P:WinCopies.Util.Generic.FieldOrPropertyNotFound">
            <summary>
            Gets the FieldOrPropertyNotFound resource.
            </summary>
        </member>
        <member name="P:WinCopies.Util.Generic.ArrayWithMoreThanOneDimension">
            <summary>
            Gets the ArrayWithMoreThanOneDimension resource.
            </summary>
        </member>
        <member name="P:WinCopies.Util.Generic.OneOrMoreSameKey">
            <summary>
            Gets the OneOrMoreSameKey resource.
            </summary>
        </member>
        <member name="P:WinCopies.Util.Generic.NoValidEnumValue">
            <summary>
            Gets the NoValidEnumValue resource.
            </summary>
        </member>
        <member name="P:WinCopies.Util.Generic.StringParameterEmptyOrWhiteSpaces">
            <summary>
            Gets the StringParameterEmptyOrWhiteSpaces resource.
            </summary>
        </member>
        <member name="M:WinCopies.Util.Generic.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:WinCopies.Util.IBackgroundWorker.ApartmentState">
            <summary>
            Gets the <see cref="T:System.Threading.ApartmentState"/> of this thread.
            </summary>
        </member>
        <member name="P:WinCopies.Util.IBackgroundWorker.CancellationPending">
            <summary>
            Gets a value that indicates if the thread must try to cancel before finished the background tasks.
            </summary>
        </member>
        <member name="P:WinCopies.Util.IBackgroundWorker.IsBusy">
            <summary>
            Gets a value that indicates if the thread is busy.
            </summary>
        </member>
        <member name="P:WinCopies.Util.IBackgroundWorker.IsCancelled">
            <summary>
            Gets a value that indicates if the working is cancelled.
            </summary>
        </member>
        <member name="P:WinCopies.Util.IBackgroundWorker.Progress">
            <summary>
            Gets the current progress of the working in percent.
            </summary>
        </member>
        <member name="P:WinCopies.Util.IBackgroundWorker.WorkerReportsProgress">
            <summary>
            Gets or sets a value that indicates if the thread can notify of the progress.
            </summary>
        </member>
        <member name="P:WinCopies.Util.IBackgroundWorker.WorkerSupportsCancellation">
            <summary>
            Gets or sets a value that indicates if the thread supports the cancellation.
            </summary>
        </member>
        <member name="M:WinCopies.Util.IBackgroundWorker.CancelAsync">
            <summary>
            Cancels the working asynchronously.
            </summary>
        </member>
        <member name="M:WinCopies.Util.IBackgroundWorker.Cancel">
            <summary>
            Cancels the working.
            </summary>
        </member>
        <member name="M:WinCopies.Util.IBackgroundWorker.ReportProgress(System.Int32)">
            <summary>
            Notifies of the progress.
            </summary>
            <param name="percentProgress">
            Progress percentage.
            </param>
        </member>
        <member name="M:WinCopies.Util.IBackgroundWorker.ReportProgress(System.Int32,System.Object)">
            <summary>
            Notifies of the progress.
            </summary>
            <param name="percentProgress">
            Progress percentage.
            </param>
            <param name="userState">
            User object.
            </param>
        </member>
        <member name="E:WinCopies.Util.IBackgroundWorker.DoWork">
            <summary>
            <para>This event is called when the background thread starts. Put your background working code here.</para>
            <para>The event handler is running in the background thread.</para>
            </summary>
        </member>
        <member name="E:WinCopies.Util.IBackgroundWorker.ProgressChanged">
            <summary>
            <para>This event is called when the background thread reports progress.</para>
            <para>The event handler is running in the main thread.</para>
            </summary>
        </member>
        <member name="E:WinCopies.Util.IBackgroundWorker.RunWorkerCompleted">
            <summary>
            <para>This event is called when the background thread has finished working.</para>
            <para>The event handler is running in the background thread.</para>
            </summary>
        </member>
        <member name="M:WinCopies.Util.MenuItem.OnPropertyChanged(System.String,System.String,System.Object,System.Type)">
            <summary>
            The method that is called to set a value to a property. If succeed, then call the <see cref="M:WinCopies.Util.MenuItem.OnPropertyChanged(System.String,System.Object,System.Object)"/> method. See the Remarks section.
            </summary>
            <param name="propertyName">The name of the property to set in a new value into</param>
            <param name="fieldName">The name of the field to store the new value. This must the field that is called by the property accessors (get and set).</param>
            <param name="newValue">The value to set in the property</param>
            <param name="declaringType">The declaring type of both the property and its associated field</param>
            <remarks>To use this method, you need to work with the WinCopies Framework Property changed notification pattern. See the website of the WinCopies Framework for more details.</remarks>
        </member>
        <member name="M:WinCopies.Util.MenuItem.OnPropertyChanged(System.String,System.Object,System.Object)">
            <summary>
            The method that is called to notify that a property has changed.
            </summary>
            <param name="propertyName">The name of the property which has changed.</param>
            <param name="oldValue">The old value of the property</param>
            <param name="newValue">The new value of the property</param>
            <remarks>To use this method, you need to work with the WinCopies Framework Property changed notification pattern. See the website of the WinCopies Framework for more details.</remarks>
        </member>
        <member name="P:WinCopies.Util.MenuItem.Header">
            <summary>
            Gets or sets a value that represents the header of this item.
            </summary>
        </member>
        <member name="P:WinCopies.Util.MenuItem.Command">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Input.ICommand"/> that represents the action to do when user click on this menu item.
            </summary>
        </member>
        <member name="P:WinCopies.Util.MenuItem.CommandParameter">
            <summary>
            Gets or sets the command parameter for the <see cref="P:WinCopies.Util.MenuItem.CommandParameter"/> property.
            </summary>
        </member>
        <member name="P:WinCopies.Util.MenuItem.IsCheckable">
            <summary>
            Gets or sets a value that indicates whether this menu item can be checked.
            </summary>
        </member>
        <member name="P:WinCopies.Util.MenuItem.IsChecked">
            <summary>
            Gets or sets a value that indicates whether this menu item is checked.
            </summary>
        </member>
        <member name="P:WinCopies.Util.MenuItem.Items">
            <summary>
            Gets or sets the items of this menu item.
            </summary>
        </member>
        <member name="P:WinCopies.Util.MenuItem.IsSeparator">
            <summary>
            Gets a value that indicates whether this <see cref="T:WinCopies.Util.MenuItem"/> represents a separator.
            </summary>
        </member>
        <member name="T:WinCopies.Util.INamedObject">
            <summary>
            Provides an object that defines a value with an associated name and notifies of the name or value change.
            </summary>
        </member>
        <member name="T:WinCopies.Util.NamedObject">
            <summary>
            Provides an object that defines a value with an associated name and notifies of the name or value change.
            </summary>
        </member>
        <member name="P:WinCopies.Util.NamedObject.Name">
            <summary>
            Gets or sets the name of the object.
            </summary>
        </member>
        <member name="T:WinCopies.Util.NamedObject`1">
            <summary>
            Provides an object that defines a generic value with an associated name and notifies of the name or value change.
            </summary>
            <typeparam name="T">The type of the value of this object.</typeparam>
        </member>
        <member name="T:WinCopies.Util.ObservableListBoxSelectedItems">
            <summary>
            Allows the user to be notified when the selection of a <see cref="T:System.Windows.Controls.ListBox"/> has changed.
            </summary>
        </member>
        <member name="T:WinCopies.Util.PropertyChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/> event.
            </summary>
        </member>
        <member name="M:WinCopies.Util.Util.If(WinCopies.Util.Util.ComparisonType,WinCopies.Util.Util.Comparison,System.Object,System.Object[])">
            <summary>
            Performs a comparison by testing a value compared to an array of objects or values.
            </summary>
            <param name="comparisonType">Whether to perform an 'and', 'or' or 'xor' comparison.</param>
            <param name="comparison">The comparison type</param>
            <param name="value">The value to compare the values of the table with.</param>
            <param name="values">The values to compare.</param>
            <returns><see langword="true"/> if the comparison has succeeded for all values, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WinCopies.Util.Util.If(WinCopies.Util.Util.ComparisonType,WinCopies.Util.Util.Comparison,System.Collections.Generic.IComparer{System.Object},System.Predicate{System.Object},System.Object,System.Object[])">
            <summary>
            Performs a comparison by testing a value compared to an array of objects or values using a custom <see cref="T:System.Collections.Generic.IComparer`1"/> and <see cref="T:System.Predicate`1"/>.
            </summary>
            <param name="comparisonType">Whether to perform an 'and', 'or' or 'xor' comparison.</param>
            <param name="comparison">The comparison type</param>
            <param name="comparer">The comparer used to compare the values.</param>
            <param name="value">The value to compare with.</param>
            <param name="values">The values to compare.</param>
            <param name="predicate">The comparison predicate</param>
            <returns><see langword="true"/> if the comparison has succeeded for all values, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WinCopies.Util.Util.If(WinCopies.Util.Util.ComparisonType,WinCopies.Util.Util.Comparison,System.Object@,System.Object,System.Collections.Generic.KeyValuePair{System.Object,System.Object}[])">
            <summary>
            Performs a comparison by testing a value compared to an array of objects or values.
            </summary>
            <param name="comparisonType">Whether to perform an 'and', 'or' or 'xor' comparison.</param>
            <param name="comparison">The comparison type</param>
            <param name="value">The value to compare the values of the table with.</param>
            <param name="values">The values to compare.</param>
            <returns><see langword="true"/> if the comparison has succeeded for all values, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WinCopies.Util.Util.If(WinCopies.Util.Util.ComparisonType,WinCopies.Util.Util.Comparison,System.Object@,System.Collections.Generic.IComparer{System.Object},System.Predicate{System.Object},System.Object,System.Collections.Generic.KeyValuePair{System.Object,System.Object}[])">
            <summary>
            Performs a comparison by testing a value compared to an array of objects or values using a custom <see cref="T:System.Collections.Generic.IComparer`1"/> and <see cref="T:System.Predicate`1"/>.
            </summary>
            <param name="comparisonType">Whether to perform an 'and', 'or' or 'xor' comparison.</param>
            <param name="comparison">The comparison type</param>
            <param name="comparer">The comparer used to compare the values.</param>
            <param name="value">The value to compare with.</param>
            <param name="values">The values to compare.</param>
            <param name="predicate">The comparison predicate</param>
            <returns><see langword="true"/> if the comparison has succeeded for all values, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WinCopies.Util.Util.If``1(WinCopies.Util.Util.ComparisonType,WinCopies.Util.Util.Comparison,``0,``0[])">
            <summary>
            Performs a comparison by testing a value compared to an array of objects or values.
            </summary>
            <param name="comparisonType">Whether to perform an 'and', 'or' or 'xor' comparison.</param>
            <param name="comparison">The comparison type</param>
            <param name="value">The value to compare the values of the table with.</param>
            <param name="values">The values to compare.</param>
            <returns><see langword="true"/> if the comparison has succeeded for all values, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WinCopies.Util.Util.If``1(WinCopies.Util.Util.ComparisonType,WinCopies.Util.Util.Comparison,System.Collections.Generic.IComparer{``0},System.Predicate{``0},``0,``0[])">
            <summary>
            Performs a comparison by testing a value compared to an array of objects or values using a custom <see cref="T:System.Collections.Generic.IComparer`1"/> and <see cref="T:System.Predicate`1"/>.
            </summary>
            <param name="comparisonType">Whether to perform an 'and', 'or' or 'xor' comparison.</param>
            <param name="comparison">The comparison type</param>
            <param name="comparer">The comparer used to compare the values.</param>
            <param name="value">The value to compare with.</param>
            <param name="values">The values to compare.</param>
            <param name="predicate">The comparison predicate</param>
            <returns><see langword="true"/> if the comparison has succeeded for all values, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WinCopies.Util.Util.If``2(WinCopies.Util.Util.ComparisonType,WinCopies.Util.Util.Comparison,``0@,``1,System.Collections.Generic.KeyValuePair{``0,``1}[])">
            <summary>
            Performs a comparison by testing a value compared to an array of objects or values.
            </summary>
            <param name="comparisonType">Whether to perform an 'and', 'or' or 'xor' comparison.</param>
            <param name="comparison">The comparison type</param>
            <param name="value">The value to compare the values of the table with.</param>
            <param name="values">The values to compare.</param>
            <returns><see langword="true"/> if the comparison has succeeded for all values, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WinCopies.Util.Util.If``2(WinCopies.Util.Util.ComparisonType,WinCopies.Util.Util.Comparison,``0@,System.Collections.Generic.IComparer{``1},System.Predicate{``1},``1,System.Collections.Generic.KeyValuePair{``0,``1}[])">
            <summary>
            Performs a comparison by testing a value compared to an array of objects or values using a custom <see cref="T:System.Collections.Generic.IComparer`1"/> and <see cref="T:System.Predicate`1"/>.
            </summary>
            <param name="comparisonType">Whether to perform an 'and', 'or' or 'xor' comparison.</param>
            <param name="comparison">The comparison type</param>
            <param name="comparer">The comparer used to compare the values.</param>
            <param name="value">The value to compare with.</param>
            <param name="values">The values to compare.</param>
            <param name="predicate">The comparison predicate</param>
            <returns><see langword="true"/> if the comparison has succeeded for all values, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WinCopies.Util.Util.Concatenate``1(``0[][])">
            <summary>
            Concatenates multiple arrays from a same item type. Arrays must have only one dimension.
            </summary>
            <param name="arrays">The different tables to concatenate.</param>
            <returns></returns>
        </member>
        <member name="M:WinCopies.Util.Util.ConcatenateLong``1(``0[][])">
            <summary>
            Concatenates multiple arrays from a same item type using the <see cref="P:System.Array.LongLength"/> length property. Arrays must have only one dimension.
            </summary>
            <param name="arrays">The different tables to concatenate.</param>
            <returns></returns>
        </member>
        <member name="M:WinCopies.Util.Util.IsNumber(System.Object)">
            <summary>
            Checks if a object is numeric.
            </summary>
            <remarks>This function makes a check at the object type. For a string-parsing-checking for numerical value, look at the <see cref="M:WinCopies.Util.Util.IsNumeric(System.String,System.Decimal@)"/> function.</remarks>
            <param name="value">The object to check</param>
            <returns>A <see cref="T:System.Boolean"/> value that indicates whether the object given is a numerical type.</returns>
        </member>
        <member name="M:WinCopies.Util.Util.IsNumeric(System.String,System.Decimal@)">
            <summary>
            Checks if a <see cref="T:System.String"/> is a numerical value.
            </summary>
            <remarks>This function tries to parse a <see cref="T:System.String"/> value to a <see cref="T:System.Decimal"/> value. Given that <see cref="T:System.Decimal"/> type is the greatest numerical type in the .NET framework, all the numbers can be supported in the .NET framework can be set in a <see cref="T:System.Decimal"/> object.</remarks>
            <param name="s">The <see cref="T:System.String"/> to check</param>
            <param name="d">The <see cref="T:System.Decimal"/> in which one set the <see cref="T:System.Decimal"/> value</param>
            <returns>A <see cref="T:System.Boolean"/> value that indicates whether the <see cref="T:System.String"/> given is a <see cref="T:System.Decimal"/>.</returns>
        </member>
        <member name="T:WinCopies.Util.IValueObject">
            <summary>
            Provides an object that defines a value and notifies of the value change.
            </summary>
        </member>
        <member name="P:WinCopies.Util.IValueObject.Value">
            <summary>
            Gets or sets the value of the object.
            </summary>
        </member>
        <member name="T:WinCopies.Util.ValueObject">
            <summary>
            Provides an object that defines a value and notifies of the value change.
            </summary>
        </member>
        <member name="P:WinCopies.Util.ValueObject.Value">
            <summary>
            Gets or sets the value of the object.
            </summary>
        </member>
        <member name="M:WinCopies.Util.ValueObject.OnPropertyChanged(System.String,System.String,System.Object,System.Type)">
            <summary>
            The method that is called to set a value to a property. If succeed, then call the <see cref="M:WinCopies.Util.ValueObject.OnPropertyChanged(System.String,System.Object,System.Object)"/> method. See the Remarks section.
            </summary>
            <param name="propertyName">The name of the property to set in a new value</param>
            <param name="fieldName">The name of the field to store the new value. This must the field that is called by the property accessors (get and set).</param>
            <param name="newValue">The value to set in the property</param>
            <param name="declaringType">The declaring type of both the property and its associated field</param>
            <remarks>To use this method, you need to work with the WinCopies Framework Property changed notification pattern. See the website of the WinCopies Framework for more details.</remarks>
        </member>
        <member name="M:WinCopies.Util.ValueObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WinCopies.Util.ValueObject"/> class.
            </summary>
        </member>
        <member name="M:WinCopies.Util.ValueObject.#ctor(System.Object)">
            <summary>
            Initilizes a new instance of the <see cref="T:WinCopies.Util.ValueObject"/> class with the specified value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:WinCopies.Util.ValueObject`1">
            <summary>
            Provides an object that defines a generic value and notifies of the value change.
            </summary>
            <typeparam name="T">The type of the value of this object.</typeparam>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_SUCCESS">
            <summary>
            The operation completed successfully.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_INVALID_FUNCTION">
            <summary>
            Incorrect function.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_FILE_NOT_FOUND">
            <summary>
            The system cannot find the file specified.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_PATH_NOT_FOUND">
            <summary>
            The system cannot find the path specified.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_TOO_MANY_OPEN_FILES">
            <summary>
            The system cannot open the file.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_ACCESS_DENIED">
            <summary>
            Access is denied.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_INVALID_HANDLE">
            <summary>
            The handle is invalid.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_ARENA_TRASHED">
            <summary>
            The storage control blocks were destroyed.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_NOT_ENOUGH_MEMORY">
            <summary>
            Not enough storage is available to process this command.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_INVALID_BLOCK">
            <summary>
            The storage control block address is invalid.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_BAD_ENVIRONMENT">
            <summary>
            The environment is incorrect.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_BAD_FORMAT">
            <summary>
            An attempt was made to load a program with an incorrect format.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_INVALID_ACCESS">
            <summary>
            The access code is invalid.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_INVALID_DATA">
            <summary>
            The data is invalid.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_OUTOFMEMORY">
            <summary>
            Not enough storage is available to complete this operation.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_INVALID_DRIVE">
            <summary>
            The system cannot find the drive specified.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_CURRENT_DIRECTORY">
            <summary>
            The directory cannot be removed.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_NOT_SAME_DEVICE">
            <summary>
            The system cannot move the file to a different disk drive.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_NO_MORE_FILES">
            <summary>
            There are no more files.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_WRITE_PROTECT">
            <summary>
            The media is write protected.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_BAD_UNIT">
            <summary>
            The system cannot find the device specified.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_NOT_READY">
            <summary>
            The device is not ready.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_BAD_COMMAND">
            <summary>
            The device does not recognize the command.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_CRC">
            <summary>
            Data error (cyclic redundancy check).
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_BAD_LENGTH">
            <summary>
            The program issued a command but the command length is incorrect.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_SEEK">
            <summary>
            The drive cannot locate a specific area or track on the disk.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_NOT_DOS_DISK">
            <summary>
            The specified disk or diskette cannot be accessed.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_SECTOR_NOT_FOUND">
            <summary>
            The drive cannot find the sector requested.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_OUT_OF_PAPER">
            <summary>
            The printer is out of paper.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_WRITE_FAULT">
            <summary>
            The system cannot write to the specified device.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_READ_FAULT">
            <summary>
            The system cannot read from the specified device.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_GEN_FAILURE">
            <summary>
            A device attached to the system is not functioning.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_SHARING_VIOLATION">
            <summary>
            The process cannot access the file because it is being used by another process
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_LOCK_VIOLATION">
            <summary>
            The process cannot access the file because another process has locked a portion of the file.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_WRONG_DISK">
            <summary>
            The wrong diskette is in the drive. Insert %2 (Volume Serial Number: %3) into drive %1.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_SHARING_BUFFER_EXCEEDED">
            <summary>
            Too many files opened for sharing.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_HANDLE_EOF">
            <summary>
            Reached the end of the file.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_HANDLE_DISK_FULL">
            <summary>
            The disk is full.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_NOT_SUPPORTED">
            <summary>
            The request is not supported.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_REM_NOT_LIST">
            <summary>
            Windows cannot find the network path. Verify that the network path is correct and the destination computer is not busy or turned off. If Windows still cannot find the network path, contact your network administrator.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_DUP_NAME">
            <summary>
            You were not connected because a duplicate name exists on the network. If joining a domain, go to System in Control Panel to change the computer name and try again. If joining a workgroup, choose another workgroup name.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_BAD_NETPATH">
            <summary>
            The network path was not found.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_NETWORK_BUSY">
            <summary>
            The network is busy.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_DEV_NOT_EXIST">
            <summary>
            The specified network resource or device is no longer available.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_TOO_MANY_CMDS">
            <summary>
            The network BIOS command limit has been reached.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_ADAP_HDW_ERR">
            <summary>
            A network adapter hardware error occurred.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_BAD_NET_RESP">
            <summary>
            The specified server cannot perform the requested operation.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_UNEXP_NET_ERR">
            <summary>
            An unexpected network error occurred.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_BAD_REM_ADAP">
            <summary>
            The remote adapter is not compatible.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_PRINTQ_FULL">
            <summary>
            The printer queue is full.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_NO_SPOOL_SPACE">
            <summary>
            Space to store the file waiting to be printed is not available on the server.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_PRINT_CANCELLED">
            <summary>
            Your file waiting to be printed was deleted.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_NETNAME_DELETED">
            <summary>
            The specified network name is no longer available.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_NETWORK_ACCESS_DENIED">
            <summary>
            Network access is denied.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_BAD_DEV_TYPE">
            <summary>
            The network resource type is not correct.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_BAD_NET_NAME">
            <summary>
            The network name cannot be found.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_TOO_MANY_NAMES">
            <summary>
            The name limit for the local computer network adapter card was exceeded.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_TOO_MANY_SESS">
            <summary>
            The network BIOS session limit was exceeded.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_SHARING_PAUSED">
            <summary>
            The remote server has been paused or is in the process of being started.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_REQ_NOT_ACCEP">
            <summary>
            No more connections can be made to this remote computer at this time because there are already as many connections as the computer can accept.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_REDIR_PAUSED">
            <summary>
            The specified printer or disk device has been paused.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_FILE_EXISTS">
            <summary>
            The file exists.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_BUFFER_OVERFLOW">
            <summary>
            The file name is too long.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_DISK_FULL">
            <summary>
            There is not enough space on the disk.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_INVALID_NAME">
            <summary>
            The filename, directory name, or volume label syntax is incorrect.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_ALREADY_EXISTS">
            <summary>
            Cannot create a file when that file already exists.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_FILENAME_EXCED_RANGE">
            <summary>
            The filename or extension is too long.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_FILE_CHECKED_OUT">
            <summary>
            This file is checked out or locked for editing by another user.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_FILE_TOO_LARGE">
            <summary>
            The file size exceeds the limit allowed and cannot be saved.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_DIRECTORY">
            <summary>
            The directory name is invalid.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_DISK_TOO_FRAGMENTED">
            <summary>
            The volume is too fragmented to complete this operation.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_DELETE_PENDING">
            <summary>
            The file cannot be opened because it is in the process of being deleted.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_NOT_ALLOWED_ON_SYSTEM_FILE">
            <summary>
            Operation is not allowed on a file system public file.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_BAD_DEVICE_PATH">
            <summary>
            An attempt was made to send down the command via an invalid path to the target device.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_REQUEST_ABORTED">
            <summary>
            The request was aborted.
            </summary>
        </member>
        <member name="F:WinCopies.Util.Win32ErrorCodes.ERROR_ENCRYPTION_FAILED">
            <summary>
            The specified file could not be encrypted.
            </summary>
        </member>
        <member name="M:EventBinding.EventBindingExtension.OnPropertyChanged(System.String,System.String,System.Object,System.Type)">
            <summary>
            The method that is called to set a value to a property. If succeed, then call the <see cref="M:EventBinding.EventBindingExtension.OnPropertyChanged(System.String,System.Object,System.Object)"/> method. See the Remarks section.
            </summary>
            <param name="propertyName">The name of the property to set in a new value</param>
            <param name="fieldName">The name of the field to store the new value. This must the field that is called by the property accessors (get and set).</param>
            <param name="newValue">The value to set in the property</param>
            <param name="declaringType">The declaring type of both the property and its associated field</param>
            <remarks>To use this method, you need to work with the WinCopies Framework Property changed notification pattern. See the website of the WinCopies Framework for more details.</remarks>
        </member>
        <member name="T:Microsoft.Shell.NativeMethods.MessageHandler">
            <summary>
            Delegate declaration that matches WndProc signatures.
            </summary>
        </member>
        <member name="T:Microsoft.Shell.SingleInstance`1">
            <summary>
            This class checks to make sure that only one instance of 
            this application is running at a time.
            </summary>
            <remarks>
            Note: this class should be used with some caution, because it does no
            security checking. For example, if one instance of an app that uses this class
            is running as Administrator, any other instance, even if it is not
            running as Administrator, can activate it with command line arguments.
            For most apps, this will not be much of an issue.
            </remarks>
        </member>
        <member name="F:Microsoft.Shell.SingleInstance`1.Delimiter">
            <summary>
            String delimiter used in channel names.
            </summary>
        </member>
        <member name="F:Microsoft.Shell.SingleInstance`1.ChannelNameSuffix">
            <summary>
            Suffix to the channel name.
            </summary>
        </member>
        <member name="F:Microsoft.Shell.SingleInstance`1.RemoteServiceName">
            <summary>
            Remote service name.
            </summary>
        </member>
        <member name="F:Microsoft.Shell.SingleInstance`1.IpcProtocol">
            <summary>
            IPC protocol used (string).
            </summary>
        </member>
        <member name="F:Microsoft.Shell.SingleInstance`1.singleInstanceMutex">
            <summary>
            Application mutex.
            </summary>
        </member>
        <member name="F:Microsoft.Shell.SingleInstance`1.channel">
            <summary>
            IPC channel for communications.
            </summary>
        </member>
        <member name="F:Microsoft.Shell.SingleInstance`1.commandLineArgs">
            <summary>
            List of command line arguments for the application.
            </summary>
        </member>
        <member name="P:Microsoft.Shell.SingleInstance`1.CommandLineArgs">
            <summary>
            Gets list of command line arguments for the application.
            </summary>
        </member>
        <member name="M:Microsoft.Shell.SingleInstance`1.InitializeAsFirstInstance(System.String)">
            <summary>
            Checks if the instance of the application attempting to start is the first instance. 
            If not, activates the first instance.
            </summary>
            <returns>True if this is the first instance of the application.</returns>
        </member>
        <member name="M:Microsoft.Shell.SingleInstance`1.Cleanup">
            <summary>
            Cleans up single-instance code, clearing shared resources, mutexes, etc.
            </summary>
        </member>
        <member name="M:Microsoft.Shell.SingleInstance`1.GetCommandLineArgs(System.String)">
            <summary>
            Gets command line args - for ClickOnce deployed applications, command line args may not be passed directly, they have to be retrieved.
            </summary>
            <returns>List of command line arg strings.</returns>
        </member>
        <member name="M:Microsoft.Shell.SingleInstance`1.CreateRemoteService(System.String)">
            <summary>
            Creates a remote service for communication.
            </summary>
            <param name="channelName">Application's IPC channel name.</param>
        </member>
        <member name="M:Microsoft.Shell.SingleInstance`1.SignalFirstInstance(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Creates a client channel and obtains a reference to the remoting service exposed by the server - 
            in this case, the remoting service exposed by the first instance. Calls a function of the remoting service 
            class to pass on command line arguments from the second instance to the first and cause it to activate itself.
            </summary>
            <param name="channelName">Application's IPC channel name.</param>
            <param name="args">
            Command line arguments for the second instance, passed to the first instance to take appropriate action.
            </param>
        </member>
        <member name="M:Microsoft.Shell.SingleInstance`1.ActivateFirstInstanceCallback(System.Object)">
            <summary>
            Callback for activating first instance of the application.
            </summary>
            <param name="arg">Callback argument.</param>
            <returns>Always null.</returns>
        </member>
        <member name="M:Microsoft.Shell.SingleInstance`1.ActivateFirstInstance(System.Collections.Generic.IList{System.String})">
            <summary>
            Activates the first instance of the application with arguments from a second instance.
            </summary>
            <param name="args">List of arguments to supply the first instance of the application.</param>
        </member>
        <member name="T:Microsoft.Shell.SingleInstance`1.IPCRemoteService">
            <summary>
            Remoting service class which is exposed by the server i.e the first instance and called by the second instance
            to pass on the command line arguments to the first instance and cause it to activate itself.
            </summary>
        </member>
        <member name="M:Microsoft.Shell.SingleInstance`1.IPCRemoteService.InvokeFirstInstance(System.Collections.Generic.IList{System.String})">
            <summary>
            Activates the first instance of the application.
            </summary>
            <param name="args">List of arguments to pass to the first instance.</param>
        </member>
        <member name="M:Microsoft.Shell.SingleInstance`1.IPCRemoteService.InitializeLifetimeService">
            <summary>
            Remoting Object's ease expires after every 5 minutes by default. We need to override the InitializeLifetimeService class
            to ensure that lease never expires.
            </summary>
            <returns>Always null.</returns>
        </member>
    </members>
</doc>
