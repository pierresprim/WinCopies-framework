<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WinCopies.Win32NativeInterop</name>
    </assembly>
    <members>
        <member name="T:WinCopies.Win32NativeInterop.CopyFileFlags">
            <summary>
            Flags that specify how the file is to be copied.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.CopyFileFlags.COPY_FILE_FAIL_IF_EXISTS">
            <summary>
            The copy operation fails immediately if the target file already exists.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.CopyFileFlags.COPY_FILE_RESTARTABLE">
            <summary>
            Progress of the copy is tracked in the target file in case the copy fails. The failed copy can be restarted at a later time by specifying the same values for lpExistingFileName and lpNewFileName as those used in the call that failed. This can significantly slow down the copy operation as the new file may be flushed multiple times during the copy operation.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.CopyFileFlags.COPY_FILE_OPEN_SOURCE_FOR_WRITE">
            <summary>
            The file is copied and the original file is opened for write access.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.CopyFileFlags.COPY_FILE_ALLOW_DECRYPTED_DESTINATION">
            <summary>
            An attempt to copy an encrypted file will succeed even if the destination copy cannot be encrypted.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.CopyFileFlags.COPY_FILE_COPY_SYMLINK">
             <summary>
             If the source file is a symbolic link, the destination file is also a symbolic link pointing to the same file that the source symbolic link is pointing to.
            
             Windows Server 2003 and Windows XP:  This value is not supported.
             </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.CopyFileFlags.COPY_FILE_NO_BUFFERING">
             <summary>
             The copy operation is performed using unbuffered I/O, bypassing system I/O cache resources. Recommended for very large file transfers.
            
             Windows Server 2003 and Windows XP:  This value is not supported.
             </summary>
        </member>
        <member name="T:WinCopies.Win32NativeInterop.CopyProgressCallbackReason">
            <summary>
            The reason that <see cref="T:WinCopies.Win32NativeInterop.NativeMethods.CopyProgressRoutine"/> was called.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.CopyProgressCallbackReason.CALLBACK_CHUNK_FINISHED">
            <summary>
            Another part of the data file was copied.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.CopyProgressCallbackReason.CALLBACK_STREAM_SWITCH">
            <summary>
            Another stream was created and is about to be copied. This is the callback reason given when the callback routine is first invoked. 
            </summary>
        </member>
        <member name="T:WinCopies.Win32NativeInterop.CopyProgressResult">
            <summary>
            The result that is returned by the <see cref="T:WinCopies.Win32NativeInterop.NativeMethods.CopyProgressRoutine"/> function.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.CopyProgressResult.PROGRESS_CONTINUE">
            <summary>
            Continue the copy operation.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.CopyProgressResult.PROGRESS_CANCEL">
            <summary>
            Cancel the copy operation and delete the destination file.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.CopyProgressResult.PROGRESS_STOP">
            <summary>
            Stop the copy operation. It can be restarted at a later time.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.CopyProgressResult.PROGRESS_QUIET">
            <summary>
            Continue the copy operation, but stop invoking CopyProgressRoutine to report progress.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_SUCCESS">
            <summary>
            The operation completed successfully.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_INVALID_FUNCTION">
            <summary>
            Incorrect function.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_FILE_NOT_FOUND">
            <summary>
            The system cannot find the file specified.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_PATH_NOT_FOUND">
            <summary>
            The system cannot find the path specified.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_TOO_MANY_OPEN_FILES">
            <summary>
            The system cannot open the file.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_ACCESS_DENIED">
            <summary>
            Access is denied.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_INVALID_HANDLE">
            <summary>
            The handle is invalid.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_ARENA_TRASHED">
            <summary>
            The storage control blocks were destroyed.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_NOT_ENOUGH_MEMORY">
            <summary>
            Not enough storage is available to process this command.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_INVALID_BLOCK">
            <summary>
            The storage control block address is invalid.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_BAD_ENVIRONMENT">
            <summary>
            The environment is incorrect.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_BAD_FORMAT">
            <summary>
            An attempt was made to load a program with an incorrect format.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_INVALID_ACCESS">
            <summary>
            The access code is invalid.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_INVALID_DATA">
            <summary>
            The data is invalid.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_OUTOFMEMORY">
            <summary>
            Not enough storage is available to complete this operation.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_INVALID_DRIVE">
            <summary>
            The system cannot find the drive specified.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_CURRENT_DIRECTORY">
            <summary>
            The directory cannot be removed.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_NOT_SAME_DEVICE">
            <summary>
            The system cannot move the file to a different disk drive.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_NO_MORE_FILES">
            <summary>
            There are no more files.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_WRITE_PROTECT">
            <summary>
            The media is write protected.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_BAD_UNIT">
            <summary>
            The system cannot find the device specified.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_NOT_READY">
            <summary>
            The device is not ready.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_BAD_COMMAND">
            <summary>
            The device does not recognize the command.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_CRC">
            <summary>
            Data error (cyclic redundancy check).
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_BAD_LENGTH">
            <summary>
            The program issued a command but the command length is incorrect.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_SEEK">
            <summary>
            The drive cannot locate a specific area or track on the disk.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_NOT_DOS_DISK">
            <summary>
            The specified disk or diskette cannot be accessed.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_SECTOR_NOT_FOUND">
            <summary>
            The drive cannot find the sector requested.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_OUT_OF_PAPER">
            <summary>
            The printer is out of paper.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_WRITE_FAULT">
            <summary>
            The system cannot write to the specified device.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_READ_FAULT">
            <summary>
            The system cannot read from the specified device.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_GEN_FAILURE">
            <summary>
            A device attached to the system is not functioning.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_SHARING_VIOLATION">
            <summary>
            The process cannot access the file because it is being used by another process
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_LOCK_VIOLATION">
            <summary>
            The process cannot access the file because another process has locked a portion of the file.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_WRONG_DISK">
            <summary>
            The wrong diskette is in the drive. Insert %2 (Volume Serial Number: %3) into drive %1.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_SHARING_BUFFER_EXCEEDED">
            <summary>
            Too many files opened for sharing.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_HANDLE_EOF">
            <summary>
            Reached the end of the file.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_HANDLE_DISK_FULL">
            <summary>
            The disk is full.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_NOT_SUPPORTED">
            <summary>
            The request is not supported.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_REM_NOT_LIST">
            <summary>
            Windows cannot find the network path. Verify that the network path is correct and the destination computer is not busy or turned off. If Windows still cannot find the network path, contact your network administrator.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_DUP_NAME">
            <summary>
            You were not connected because a duplicate name exists on the network. If joining a domain, go to System in Control Panel to change the computer name and try again. If joining a workgroup, choose another workgroup name.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_BAD_NETPATH">
            <summary>
            The network path was not found.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_NETWORK_BUSY">
            <summary>
            The network is busy.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_DEV_NOT_EXIST">
            <summary>
            The specified network resource or device is no longer available.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_TOO_MANY_CMDS">
            <summary>
            The network BIOS command limit has been reached.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_ADAP_HDW_ERR">
            <summary>
            A network adapter hardware error occurred.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_BAD_NET_RESP">
            <summary>
            The specified server cannot perform the requested operation.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_UNEXP_NET_ERR">
            <summary>
            An unexpected network error occurred.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_BAD_REM_ADAP">
            <summary>
            The remote adapter is not compatible.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_PRINTQ_FULL">
            <summary>
            The printer queue is full.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_NO_SPOOL_SPACE">
            <summary>
            Space to store the file waiting to be printed is not available on the server.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_PRINT_CANCELLED">
            <summary>
            Your file waiting to be printed was deleted.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_NETNAME_DELETED">
            <summary>
            The specified network name is no longer available.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_NETWORK_ACCESS_DENIED">
            <summary>
            Network access is denied.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_BAD_DEV_TYPE">
            <summary>
            The network resource type is not correct.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_BAD_NET_NAME">
            <summary>
            The network name cannot be found.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_TOO_MANY_NAMES">
            <summary>
            The name limit for the local computer network adapter card was exceeded.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_TOO_MANY_SESS">
            <summary>
            The network BIOS session limit was exceeded.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_SHARING_PAUSED">
            <summary>
            The remote server has been paused or is in the process of being started.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_REQ_NOT_ACCEP">
            <summary>
            No more connections can be made to this remote computer at this time because there are already as many connections as the computer can accept.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_REDIR_PAUSED">
            <summary>
            The specified printer or disk device has been paused.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_FILE_EXISTS">
            <summary>
            The file exists.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_BUFFER_OVERFLOW">
            <summary>
            The file name is too long.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_DISK_FULL">
            <summary>
            There is not enough space on the disk.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_INVALID_NAME">
            <summary>
            The filename, directory name, or volume label syntax is incorrect.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_ALREADY_EXISTS">
            <summary>
            Cannot create a file when that file already exists.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_FILENAME_EXCED_RANGE">
            <summary>
            The filename or extension is too long.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_FILE_CHECKED_OUT">
            <summary>
            This file is checked out or locked for editing by another user.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_FILE_TOO_LARGE">
            <summary>
            The file size exceeds the limit allowed and cannot be saved.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_DIRECTORY">
            <summary>
            The directory name is invalid.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_DISK_TOO_FRAGMENTED">
            <summary>
            The volume is too fragmented to complete this operation.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_DELETE_PENDING">
            <summary>
            The file cannot be opened because it is in the process of being deleted.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_NOT_ALLOWED_ON_SYSTEM_FILE">
            <summary>
            Operation is not allowed on a file system public file.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_BAD_DEVICE_PATH">
            <summary>
            An attempt was made to send down the command via an invalid path to the target device.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_REQUEST_ABORTED">
            <summary>
            The request was aborted.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.ErrorCodes.ERROR_ENCRYPTION_FAILED">
            <summary>
            The specified file could not be encrypted.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.FileOperations.FOF_ALLOWUNDO">
            <summary>
            <para>Preserve undo information, if possible.</para>
            <para>Prior to Windows Vista, operations could be undone only from the same process that performed the original operation.</para>
            <para>In Windows Vista and later systems, the scope of the undo is a user session. Any process running in the user session can undo another operation. The undo state is held in the Explorer.exe process, and as long as that process is running, it can coordinate the undo functions.</para>
            <para>If the source file parameter does not contain fully qualified path and file names, this flag is ignored.</para>
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.FileOperations.FOF_FILESONLY">
            <summary>
            Perform the operation only on files (not on folders) if a wildcard file name (.) is specified.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.FileOperations.FOF_NOCONFIRMATION">
            <summary>
            Respond with <b>Yes to All</b> for any dialog box that is displayed.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.FileOperations.FOF_NOCONFIRMMKDIR">
            <summary>
            Do not confirm the creation of a new folder if the operation requires one to be created.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.FileOperations.FOF_NO_CONNECTED_ELEMENTS">
            <summary>
            Do not move connected items as a group. Only move the specified files.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.FileOperations.FOF_NOCOPYSECURITYATTRIBS">
            <summary>
            Do not copy the security attributes of the item.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.FileOperations.FOF_NOERRORUI">
            <summary>
            Do not display a message to the user if an error occurs. If this flag is set without <see cref="!:FOFX_EARLYFAILURE"/>, any error is treated as if the user had chosen <b>Ignore</b> or <b>Continue</b> in a dialog box. It halts the current action, sets a flag to indicate that an action was aborted, and proceeds with the rest of the operation.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.FileOperations.FOF_NORECURSION">
            <summary>
            Only operate in the local folder. Do not operate recursively into subdirectories.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.FileOperations.FOF_RENAMEONCOLLISION">
            <summary>
            Give the item being operated on a new name in a move, copy, or rename operation if an item with the target name already exists.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.FileOperations.FOF_SILENT">
            <summary>
            Do not display a progress dialog box.
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.FileOperations.FOF_WANTNUKEWARNING">
            <summary>
            Send a warning if a file or folder is being destroyed during a delete operation rather than recycled. This flag partially overrides <see cref="F:WinCopies.Win32NativeInterop.FileOperations.FOF_NOCONFIRMATION"/>.
            </summary>
        </member>
        <member name="T:WinCopies.Win32NativeInterop.HResult">
            <summary>
            HRESULT Wrapper    
            </summary>    
        </member>
        <member name="F:WinCopies.Win32NativeInterop.HResult.Ok">
            <summary>     
            S_OK          
            </summary>    
        </member>
        <member name="F:WinCopies.Win32NativeInterop.HResult.False">
            <summary>
            S_FALSE
            </summary>        
        </member>
        <member name="F:WinCopies.Win32NativeInterop.HResult.InvalidArguments">
            <summary>
            E_INVALIDARG
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.HResult.OutOfMemory">
            <summary>
            E_OUTOFMEMORY
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.HResult.NoInterface">
            <summary>
            E_NOINTERFACE
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.HResult.Fail">
            <summary>
            E_FAIL
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.HResult.ElementNotFound">
            <summary>
            E_ELEMENTNOTFOUND
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.HResult.TypeElementNotFound">
            <summary>
            TYPE_E_ELEMENTNOTFOUND
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.HResult.NoObject">
            <summary>
            NO_OBJECT
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.HResult.Win32ErrorCanceled">
            <summary>
            Win32 Error code: ERROR_CANCELLED
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.HResult.Canceled">
            <summary>
            ERROR_CANCELLED
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.HResult.ResourceInUse">
            <summary>
            The requested resource is in use
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.HResult.AccessDenied">
            <summary>
            The requested resources is read-only.
            </summary>
        </member>
        <member name="M:WinCopies.Win32NativeInterop.NativeMethods.CopyFileEx(System.String,System.String,WinCopies.Win32NativeInterop.NativeMethods.CopyProgressRoutine,System.IntPtr,System.Int32@,WinCopies.Win32NativeInterop.CopyFileFlags)">
             <summary>
             <para>Copies an existing file to a new file, notifying the application of its progress through a callback function.</para>
            
             <para>To perform this operation as a transacted operation, use the CopyFileTransacted function.</para>
             </summary>
             <param name="lpExistingFileName"><para>The name of an existing file.</para>
            
             <para>In the ANSI version of this function, the name is limited to MAX_PATH characters. To extend this limit to 32,767 wide characters, call the Unicode version of the function and prepend "\?" to the path.For more information, see Naming a File.</para>
             <para>Tip Starting in Windows 10, version 1607, for the unicode version of this function (CopyFileExW), you can opt-in to remove the MAX_PATH character limitation without prepending "\\?\". See the "Maximum Path Limitation" section of Naming Files, Paths, and Namespaces for details.</para>
            
            <para>If lpExistingFileName does not exist, the <see cref="M:WinCopies.Win32NativeInterop.NativeMethods.CopyFileEx(System.String,System.String,WinCopies.Win32NativeInterop.NativeMethods.CopyProgressRoutine,System.IntPtr,System.Int32@,WinCopies.Win32NativeInterop.CopyFileFlags)"/> function fails, and the <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/> function returns <see cref="!:NativeWin32FilesProcessesErrorCodes.ERROR_FILE_NOT_FOUND"/>.</para></param>
             <param name="lpNewFileName"><para>The name of the new file.</para>
            
             <para>In the ANSI version of this function, the name is limited to MAX_PATH characters. To extend this limit to 32,767 wide characters, call the Unicode version of the function and prepend "\?" to the path.For more information, see Naming a File.</para>
            
             <para>Tip Starting inWindows 10, version 1607, for the unicode version of this function (CopyFileExW), you can opt-in to remove the MAX_PATH character limitation without prepending "\\?\". See the "Maximum Path Limitation" section of Naming Files, Paths, and Namespaces for details.</para></param>
             <param name="lpProgressRoutine">The address of a callback function of type <see cref="T:WinCopies.Win32NativeInterop.NativeMethods.CopyProgressRoutine"/> that is called each time another portion of the file has been copied. This parameter can be <see langword="null"/>. For more information on the progress callback function, see the <see cref="T:WinCopies.Win32NativeInterop.NativeMethods.CopyProgressRoutine"/> function.</param>
             <param name="lpData">The argument to be passed to the callback function. This parameter can be <see langword="null"/>.</param>
             <param name="pbCancel">If this flag is set to <see langword="true"/> during the copy operation, the operation is canceled. Otherwise, the copy operation will continue to completion.</param>
             <param name="dwCopyFlags">Flags that specify how the file is to be copied. This parameter can be a combination of the <see cref="T:WinCopies.Win32NativeInterop.CopyFileFlags"/> enum.</param>
             <returns><para>If the function succeeds, the return value is nonzero.</para>
            
             <para>If the function fails, the return value is zero.To get extended error information call <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/>.</para>
            
             <para>If lpProgressRoutine returns <see cref="F:WinCopies.Win32NativeInterop.CopyProgressResult.PROGRESS_CANCEL"/> due to the user canceling the operation, <see cref="M:WinCopies.Win32NativeInterop.NativeMethods.CopyFileEx(System.String,System.String,WinCopies.Win32NativeInterop.NativeMethods.CopyProgressRoutine,System.IntPtr,System.Int32@,WinCopies.Win32NativeInterop.CopyFileFlags)"/> will return zero and <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/> will return <see cref="!:WinCopies.Util.Win32ErrorCodes.ERROR_REQUEST_ABORTED"/>. In this case, the partially copied destination file is deleted.</para>
            
             <para>If lpProgressRoutine returns <see cref="F:WinCopies.Win32NativeInterop.CopyProgressResult.PROGRESS_STOP"/> due to the user stopping the operation, <see cref="M:WinCopies.Win32NativeInterop.NativeMethods.CopyFileEx(System.String,System.String,WinCopies.Win32NativeInterop.NativeMethods.CopyProgressRoutine,System.IntPtr,System.Int32@,WinCopies.Win32NativeInterop.CopyFileFlags)"/> will return zero and <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/> will return <see cref="!:WinCopies.Util.Win32ErrorCodes.ERROR_REQUEST_ABORTED"/>. In this case, the partially copied destination file is left intact.</para></returns>
             <remarks><para>This function preserves extended attributes, OLE structured storage, NTFS file system alternate data streams, security resource attributes, and file attributes.</para>
            
             <para>Windows 7, Windows Server 2008 R2, Windows Server 2008, Windows Vista, Windows Server 2003 and Windows XP:  Security resource attributes(ATTRIBUTE_SECURITY_INFORMATION) for the existing file are not copied to the new file until Windows 8 and Windows Server 2012.</para>
            
             <para>The security resource properties(ATTRIBUTE_SECURITY_INFORMATION) for the existing file are copied to the new file.</para>
            
             <para>Windows 7, Windows Server 2008 R2, Windows Server 2008, Windows Vista, Windows Server 2003 and Windows XP:  Security resource properties for the existing file are not copied to the new file until Windows 8 and Windows Server 2012.</para>
            
             <para>This function fails with <see cref="!:NativeWin32FilesProcessesErrorCodes.ERROR_ACCESS_DENIED"/> if the destination file already exists and has the <see cref="F:System.IO.FileAttributes.Hidden"/> or <see cref="F:System.IO.FileAttributes.ReadOnly"/> attribute set.</para>
            
             <para>When encrypted files are copied using <see cref="M:WinCopies.Win32NativeInterop.NativeMethods.CopyFileEx(System.String,System.String,WinCopies.Win32NativeInterop.NativeMethods.CopyProgressRoutine,System.IntPtr,System.Int32@,WinCopies.Win32NativeInterop.CopyFileFlags)"/>, the function attempts to encrypt the destination file with the keys used in the encryption of the source file.If this cannot be done, this function attempts to encrypt the destination file with default keys.If both of these methods cannot be done, <see cref="M:WinCopies.Win32NativeInterop.NativeMethods.CopyFileEx(System.String,System.String,WinCopies.Win32NativeInterop.NativeMethods.CopyProgressRoutine,System.IntPtr,System.Int32@,WinCopies.Win32NativeInterop.CopyFileFlags)"/> fails with an <see cref="!:WinCopies.Util.Win32ErrorCodes.ERROR_ENCRYPTION_FAILED"/> error code. If you want <see cref="M:WinCopies.Win32NativeInterop.NativeMethods.CopyFileEx(System.String,System.String,WinCopies.Win32NativeInterop.NativeMethods.CopyProgressRoutine,System.IntPtr,System.Int32@,WinCopies.Win32NativeInterop.CopyFileFlags)"/> to complete the copy operation even if the destination file cannot be encrypted, include the <see cref="F:WinCopies.Win32NativeInterop.CopyFileFlags.COPY_FILE_ALLOW_DECRYPTED_DESTINATION"/> as the value of the dwCopyFlags parameter in your call to <see cref="M:WinCopies.Win32NativeInterop.NativeMethods.CopyFileEx(System.String,System.String,WinCopies.Win32NativeInterop.NativeMethods.CopyProgressRoutine,System.IntPtr,System.Int32@,WinCopies.Win32NativeInterop.CopyFileFlags)"/>.</para>
            
             If <see cref="F:WinCopies.Win32NativeInterop.CopyFileFlags.COPY_FILE_COPY_SYMLINK"/> is specified, the following rules apply:
            
             If the source file is a symbolic link, the symbolic link is copied, not the target file.
             If the source file is not a symbolic link, there is no change in behavior.
             If the destination file is an existing symbolic link, the symbolic link is overwritten, not the target file.
             If <see cref="F:WinCopies.Win32NativeInterop.CopyFileFlags.COPY_FILE_FAIL_IF_EXISTS"/> is also specified, and the destination file is an existing symbolic link, the operation fails in all cases.
            
             If <see cref="F:WinCopies.Win32NativeInterop.CopyFileFlags.COPY_FILE_COPY_SYMLINK"/> is not specified, the following rules apply:
            
             If <see cref="F:WinCopies.Win32NativeInterop.CopyFileFlags.COPY_FILE_FAIL_IF_EXISTS"/> is also specified, and the destination file is an existing symbolic link, the operation fails only if the target of the symbolic link exists.
             If <see cref="F:WinCopies.Win32NativeInterop.CopyFileFlags.COPY_FILE_FAIL_IF_EXISTS"/> is not specified, there is no change in behavior.
            
             Windows 7, Windows Server 2008 R2, Windows Server 2008, Windows Vista, Windows Server 2003 and Windows XP:  If you are writing an application that is optimizing file copy operations across a LAN, consider using the TransmitFile function from Windows Sockets(Winsock). TransmitFile supports high-performance network transfers and provides a simple interface to send the contents of a file to a remote computer.To use TransmitFile, you must write a Winsock client application that sends the file from the source computer as well as a Winsock server application that uses other Winsock functions to receive the file on the remote computer.
            
             In Windows 8 and Windows Server 2012, this function is supported by the following technologies.
             Technology Supported
             Server Message Block (SMB) 3.0 protocol Yes
             SMB 3.0 Transparent Failover (TFO) Yes
             SMB 3.0 with Scale-out File Shares (SO) Yes
             Cluster Shared Volume File System (CsvFS) Yes
             Resilient File System (ReFS) Yes </remarks>
        </member>
        <member name="T:WinCopies.Win32NativeInterop.NativeMethods.CopyProgressRoutine">
            <summary>
            An application-defined callback function used with the <see cref="M:WinCopies.Win32NativeInterop.NativeMethods.CopyFileEx(System.String,System.String,WinCopies.Win32NativeInterop.NativeMethods.CopyProgressRoutine,System.IntPtr,System.Int32@,WinCopies.Win32NativeInterop.CopyFileFlags)"/>, MoveFileTransacted, and MoveFileWithProgress functions. It is called when a portion of a copy or move operation is completed. The LPPROGRESS_ROUTINE type defines a pointer to this callback function. CopyProgressRoutine is a placeholder for the application-defined function name.
            </summary>
            <param name="TotalFileSize">The total size of the file, in bytes.</param>
            <param name="TotalBytesTransferred">The total number of bytes transferred from the source file to the destination file since the copy operation began.</param>
            <param name="StreamSize">The total size of the current file stream, in bytes.</param>
            <param name="StreamBytesTransferred">The total number of bytes in the current stream that have been transferred from the source file to the destination file since the copy operation began.</param>
            <param name="dwStreamNumber">A handle to the current stream. The first time CopyProgressRoutine is called, the stream number is 1.</param>
            <param name="dwCallbackReason">The reason that <see cref="T:WinCopies.Win32NativeInterop.NativeMethods.CopyProgressRoutine"/> was called. This parameter can be one of the values of the <see cref="T:WinCopies.Win32NativeInterop.CopyProgressCallbackReason"/> enum.</param>
            <param name="hSourceFile">A handle to the source file.</param>
            <param name="hDestinationFile">A handle to the destination file.</param>
            <param name="lpData">Argument passed to CopyProgressRoutine by <see cref="M:WinCopies.Win32NativeInterop.NativeMethods.CopyFileEx(System.String,System.String,WinCopies.Win32NativeInterop.NativeMethods.CopyProgressRoutine,System.IntPtr,System.Int32@,WinCopies.Win32NativeInterop.CopyFileFlags)"/>, MoveFileTransacted, or MoveFileWithProgress.</param>
            <returns>The CopyProgressRoutine function should return one of the values of the <see cref="T:WinCopies.Win32NativeInterop.CopyProgressResult"/> enum.</returns>
            <remarks>An application can use this information to display a progress bar that shows the total number of bytes copied as a percent of the total file size.</remarks>
        </member>
        <member name="M:WinCopies.Win32NativeInterop.NativeMethods.DestroyIcon(System.IntPtr)">
            <summary>
            Destroys an icon and frees any memory the icon occupied. See the Remarks section.
            </summary>
            <param name="hIcon">A handle to the icon to be destroyed. The icon must not be in use.</param>
            <returns>If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/>.</returns>
            <remarks>It is only necessary to call DestroyIcon for icons and cursors created with the following functions: CreateIconFromResourceEx (if called without the LR_SHARED flag), CreateIconIndirect, and CopyIcon. Do not use this function to destroy a shared icon. A shared icon is valid as long as the module from which it was loaded remains in memory. The following functions obtain a shared icon.
            LoadIcon
            LoadImage(if you use the LR_SHARED flag)
            CopyImage(if you use the LR_COPYRETURNORG flag and the hImage parameter is a shared icon)
            CreateIconFromResource
            CreateIconFromResourceEx(if you use the LR_SHARED flag)</remarks>
        </member>
    </members>
</doc>
