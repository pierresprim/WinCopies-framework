<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WinCopies.Win32NativeInterop</name>
    </assembly>
    <members>
        <member name="T:WinCopies.Win32NativeInterop.HResult">
            <summary>
            HRESULT Wrapper    
            </summary>    
        </member>
        <member name="F:WinCopies.Win32NativeInterop.HResult.Ok">
            <summary>     
            S_OK          
            </summary>    
        </member>
        <member name="F:WinCopies.Win32NativeInterop.HResult.False">
            <summary>
            S_FALSE
            </summary>        
        </member>
        <member name="F:WinCopies.Win32NativeInterop.HResult.InvalidArguments">
            <summary>
            E_INVALIDARG
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.HResult.OutOfMemory">
            <summary>
            E_OUTOFMEMORY
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.HResult.NoInterface">
            <summary>
            E_NOINTERFACE
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.HResult.Fail">
            <summary>
            E_FAIL
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.HResult.ElementNotFound">
            <summary>
            E_ELEMENTNOTFOUND
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.HResult.TypeElementNotFound">
            <summary>
            TYPE_E_ELEMENTNOTFOUND
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.HResult.NoObject">
            <summary>
            NO_OBJECT
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.HResult.Win32ErrorCanceled">
            <summary>
            Win32 Error code: ERROR_CANCELLED
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.HResult.Canceled">
            <summary>
            ERROR_CANCELLED
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.HResult.ResourceInUse">
            <summary>
            The requested resource is in use
            </summary>
        </member>
        <member name="F:WinCopies.Win32NativeInterop.HResult.AccessDenied">
            <summary>
            The requested resources is read-only.
            </summary>
        </member>
        <member name="M:WinCopies.Win32NativeInterop.NativeMethods.DestroyIcon(System.IntPtr)">
            <summary>
            Destroys an icon and frees any memory the icon occupied. See the Remarks section.
            </summary>
            <param name="hIcon">A handle to the icon to be destroyed. The icon must not be in use.</param>
            <returns>If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. To get extended error information, call <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/>.</returns>
            <remarks>It is only necessary to call DestroyIcon for icons and cursors created with the following functions: CreateIconFromResourceEx (if called without the LR_SHARED flag), CreateIconIndirect, and CopyIcon. Do not use this function to destroy a shared icon. A shared icon is valid as long as the module from which it was loaded remains in memory. The following functions obtain a shared icon.
            LoadIcon
            LoadImage(if you use the LR_SHARED flag)
            CopyImage(if you use the LR_COPYRETURNORG flag and the hImage parameter is a shared icon)
            CreateIconFromResource
            CreateIconFromResourceEx(if you use the LR_SHARED flag)</remarks>
        </member>
    </members>
</doc>
